+++ b/backend/controllers/testerController.js
+const {
+  calculatePercentage,
+  calculateMajority,
+  diff,
+} = require("../functions");
+    linkRepo: req.body.linkRepo,
+    file: req.body.file,
+  //bytecode
+  // let v = [];
+  // let savedBytecode, item_bytecode;
+  // if (req.files.length === 0) {
+  //   item_bytecode = await Bytecode.find({ test: req.body.link });
+  // } else {
+  //   console.log(req.files);
+  //   for (let i = 0; i < req.files.length; i++) {
+  //     v.push(
+  //       Buffer.from(fs.readFileSync(req.files[i].path).toString("hex"), "hex")
+  //     );
+  //   }
+  //   const bytecode = new Bytecode({
+  //     timeStamp: new Date(),
+  //     bytes: v,
+  //     test: testId,
+  //   });
+  //   savedBytecode = await bytecode.save();
+  //   //the path to the bytecode file
+  //   const bytecodeFileName = `${savedBytecode._id}.txt`;
+  //   const generatedDirPath = path.join(__dirname, "../", "/uploads/generated");
+  //   const bytecodeOutputPath = path.join(generatedDirPath, bytecodeFileName);
+  //   const bytesArray = savedBytecode.bytes;
+  //   const text = bytesArray.join("\n\n\n");
+
+  //   // create the 'generated' directory if it doesn't exist
+  //   if (!fs.existsSync(generatedDirPath)) {
+  //     fs.mkdirSync(generatedDirPath);
+  //   }
+  //   //get the bytecode by id and save it to a file
+  //   fs.writeFileSync(bytecodeOutputPath, text, "utf-8");
+  // }
+          // bytecode: savedBytecode
+          //   ? "http://localhost:5000/generated/" + savedBytecode._id
+          //   : "http://localhost:5000/generated/" +
+          //     item_bytecode[0]._id +
+          //     ".txt",
+        await diff(req);
+++ b/backend/functions.js
+const path = require("path");
+const fs = require("fs");
+const { exec } = require("child_process");
+
+function diff(req) {
+  const command = "git diff HEAD~1 HEAD";
+  const differenceFileName = `difference.txt`;
+  const generatedDirPath = path.join(__dirname, "./", "/uploads/difference");
+
+  const outputFilePathWithPlus = path.join(generatedDirPath, "diff-plus.txt");
+  const outputFilePathWithMinus = path.join(generatedDirPath, "diff-minus.txt");
+  const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
+
+  // create the 'generated' directory if it doesn't exist
+  if (!fs.existsSync(generatedDirPath)) {
+    fs.mkdirSync(generatedDirPath);
+  }
+
+  exec(command, { cwd: req.body.file }, (error, stdout, stderr) => {
+    if (error) {
+      console.error(`2) Erreur: ${error.message}`);
+      fs.writeFileSync(bytecodeOutputPath, error.message, "utf-8");
+      return;
+    }
+    if (stderr) {
+      console.error(`2) Erreur: ${stderr}`);
+      fs.writeFileSync(bytecodeOutputPath, stderr, "utf-8");
+      return;
+    }
+
+    // Supprimer la chaîne "@@" du texte obtenu depuis la commande 'git diff'
+    if (typeof stdout === "string" || stdout instanceof String) {
+      stdout = stdout.replace(//g, "");
+    }
+
+    fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+    console.log("2) fichier généré avec succès");
+    const inputLines = stdout.split("\n");
+
+    const linesWithPlus = inputLines.filter(
+      (line) => line.startsWith("+") && !/^\+$/.test(line)
+    );
+    const linesWithMinus = inputLines.filter(
+      (line) => line.startsWith("-") && !/^\-$/.test(line)
+    );
+
+    fs.writeFileSync(outputFilePathWithPlus, linesWithPlus.join("\n"), "utf-8");
+    fs.writeFileSync(
+      outputFilePathWithMinus,
+      linesWithMinus.join("\n"),
+      "utf-8"
+    );
+  });
+}
+
+exports.diff = diff;
+++ b/backend/models/testModel.js
+    linkRepo: {
+      type: String,
+    },
+    file: {
+      type: String,
+    },
+++ b/backend/routers/testerRouter.js
+++ b/backend/uploads/difference/diff-minus.txt
+--- /dev/null
+--- /dev/null
+--- a/backend/uploads/difference/difference.txt
+-diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+-index 5e6836f..cd03b16 100644
+---- a/frontend/src/components/Modals.jsx
+-+++ b/frontend/src/components/Modals.jsx
+- import AdminServices from "../services/AdminServices/AdminServices";
+- import TesterService from "../services/TesterServices/TesterService";
+- import { CircularChart } from "./ChartsComponent";
+- import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
+-+import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+- 
+- export const EmailModal = ({ visible, onCancel }) => {
+-   const [form] = Form.useForm();
+- export const AddTestModal = ({ visible, onCancel }) => {
+-     setMethod(value);
+-   };
+-   const [files, setFiles] = useState([]);
+-+  const hasFiles = files.length > 0;
+-   const onFinish = async (values) => {
+-     setLoading(true);
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                 </Col>
+-               </Row>
+-             </Form.Item>
+-             <Form.Item
+-               label="Upload bytecode"
+-               name="files"
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                 { required: true, message: "Veuillez ajouter un fichier !" },
+-               ]}
+-             >
+--              <div style={{ display: "flex", alignItems: "center" }}>
+-+              <div style={{ display: "flex", flexDirection: "column" }}>
+-                 <label
+-                   htmlFor="file-upload"
+--                  style={{ marginRight: "10px", fontSize: "16px" }}
+-+                  style={{ fontSize: "16px", marginBottom: "10px" }}
+-                 >
+-                   Sélectionnez un ou plusieurs fichiers :
+-                 </label>
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                       cursor: "pointer",
+-                     }}
+-                   >
+--                    Parcourir
+-+                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+-                   </label>
+--                  <div style={{ marginLeft: "10px" }}>
+--                    {files.map((file) => (
+--                      <span
+-+                  <div
+-+                    style={{
+-+                      marginLeft: "10px",
+-+                      display: "flex",
+-+                      flexDirection: "column",
+-+                    }}
+-+                  >
+-+                    {files.map((file, index) => (
+-+                      <div
+-                         key={file.name}
+--                        style={{ fontSize: "14px", fontWeight: "bold" }}
+-+                        style={{
+-+                          display: "flex",
+-+                          alignItems: "center",
+-+                          marginBottom: "5px",
+-+                          padding: "5px",
+-+                          border: "1px solid #ccc",
+-+                          borderRadius: "5px",
+-+                        }}
+-                       >
+--                        {file.name}{" "}
+--                      </span>
+-+                        <span
+-+                          style={{
+-+                            fontSize: "14px",
+-+                            fontWeight: "bold",
+-+                            marginRight: "5px",
+-+                            flexGrow: 1,
+-+                            overflow: "hidden",
+-+                            whiteSpace: "nowrap",
+-+                            textOverflow: "ellipsis",
+-+                          }}
+-+                        >
+-+                          {file.name}
+-+                        </span>
+-+                        <div
+-+                          style={{
+-+                            borderLeft: "1px solid #ccc",
+-+                            paddingLeft: "5px",
+-+                          }}
+-+                        >
+-+                          <Button
+-+                            type="button"
+-+                            onClick={() => {
+-+                              const newFiles = [...files];
+-+                              newFiles.splice(index, 1);
+-+                              setFiles(newFiles);
+-+                            }}
+-+                          >
+-+                            <DeleteTwoTone
+-+                              twoToneColor="#ff4d4f"
+-+                              style={{ fontSize: "20px" }}
+-+                            />
+-+                          </Button>
+-+                        </div>
+-+                      </div>
+-                     ))}
+-                   </div>
+-                 </div>
+-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+-index c6531c8..c5b9a8a 100644
+---- a/frontend/src/components/ProfileComponent/ProfileComponent.css
+-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+-
+- 
+- .profile-info {
+-   margin-top: 20px;
+-+  font-size: 28px;
+-+  font-weight: bold;
+- }
+- 
+- .profile-name {
+--  font-size: 28px;
+-+  font-size: 18px;
+-   font-weight: bold;
+- }
+- 
+-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-index 8dc1ac7..bd8e56a 100644
+---- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-
+- import React, { useEffect, useState } from "react";
+--import { Avatar, Row, Col, Space, Button, Upload } from "antd";
+-+import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+- import "./ProfileComponent.css";
+- import ProfileServices from "../../services/ProfileServices";
+- import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+--import { UploadOutlined } from "@ant-design/icons";
+-+import {
+-+  UploadOutlined,
+-+  MailTwoTone,
+-+  LockTwoTone,
+-+  SettingTwoTone,
+-+} from "@ant-design/icons";
+- import { toast } from "react-toastify";
+- import base64js from "base64-js";
+-+const { Meta } = Card;
+- 
+- function ProfileComponent() {
+-   const [modalMailVisible, setModalMailVisible] = useState(false);
+- function ProfileComponent() {
+-     setImageUrl(null);
+-   };
+- 
+--  return (
+--    <div className="profile-page">
+--      <div className="site-page-header-ghost-wrapper">
+--        <Row justify="center">
+--          <Col span={18}>
+--            <div className="site-page-header-ghost-wrapper-content">
+--              <div className="profile-container">
+--                <Row gutter={16} justify="center">
+--                  <Col span={6}>
+--                    <div
+--                      style={{
+--                        position: "relative",
+--                        display: "inline-block",
+--                        borderRadius: "10px",
+--                        overflow: "hidden",
+--                        marginTop: "30px",
+--                      }}
+--                      onMouseEnter={handleMouseEnter}
+--                      onMouseLeave={handleMouseLeave}
+--                    >
+--                      {imageUrl === null ? (
+--                        <Avatar
+--                          className="profile-picture"
+--                          size={128}
+--                          src={
+--                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+--                          }
+--                        />
+--                      ) : (
+--                        <Avatar
+--                          className="profile-picture"
+--                          size={128}
+--                          src={imageUrl}
+--                        />
+--                      )}
+--                      {showButton && (
+--                        <div
+--                          style={{
+--                            position: "absolute",
+--                            top: 0,
+--                            left: 0,
+--                            width: "100%",
+--                            height: "100%",
+--                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+--                            display: "flex",
+--                            alignItems: "center",
+--                            justifyContent: "center",
+--                          }}
+--                        >
+--                          <Upload
+--                            name="image"
+--                            method="put"
+--                            action="http://localhost:5000/api/v1/update-image"
+--                            headers={{
+--                              Authorization: `Bearer ${ProfileServices.token}`,
+--                            }}
+--                            listType="picture-card"
+--                            className="avatar-uploader"
+--                            showUploadList={false}
+--                            beforeUpload={(file) => {
+--                              const isJpgOrPng =
+--                                file.type === "image/jpeg" ||
+--                                file.type === "image/png";
+--                              if (!isJpgOrPng) {
+--                                toast.error(
+--                                  "You can only upload JPG/PNG file!"
+--                                );
+--                              }
+--                              const isLt2M = file.size / 1024 / 1024 < 2;
+--                              if (!isLt2M) {
+--                                toast.error("Image must smaller than 2MB!");
+--                              }
+--                              return isJpgOrPng && isLt2M;
+--                            }}
+--                            onChange={(info) => {
+--                              if (info.file.status === "done") {
+--                                const byteArray = new Uint8Array(
+--                                  info.file.response.image.data
+--                                );
+--                                const base64String =
+--                                  base64js.fromByteArray(byteArray);
+--                                handleUpload(atob(base64String));
+--                              }
+--                            }}
+--                            onRemove={handleRemove}
+--                          >
+--                            <UploadOutlined
+--                              style={{ fontSize: "3rem", color: "white" }}
+--                            />
+--                          </Upload>
+--                        </div>
+--                      )}
+--                    </div>
+--                  </Col>
+--                  <Col span={12}>
+--                    <div className="profile-info">
+--                      <h2
+--                        className="profile-name"
+--                        style={{ textTransform: "capitalize" }}
+--                      >
+--                        {userInfo.lastname} {userInfo.firstname}
+--                      </h2>
+--                      <p className="profile-email">Email: {userInfo.email}</p>
+--                      <p className="profile-location">Role : {userInfo.role}</p>
+--                    </div>
+--                  </Col>
+--                </Row>
+--
+--                <div className="profile-bio">
+--                  <Space>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalMailVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ email
+--                    </Button>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalPasswordVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ mot de passe
+--                    </Button>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalInfoVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ profil
+--                    </Button>
+-+  const obj = {
+-+    des: (
+-+      <div>
+-+        <h2
+-+          className="profile-name"
+-+          style={{ textTransform: "capitalize", color: "black" }}
+-+        >
+-+          {userInfo.lastname} {userInfo.firstname}
+-+        </h2>
+-+        <p className="profile-email">Email: {userInfo.email}</p>
+-+        <p className="profile-location">
+-+          Role :{" "}
+-+          <Tag color="gold" style={{ fontSize: "20px" }}>
+-+            {userInfo.role}
+-+          </Tag>
+-+        </p>
+-+      </div>
+-+    ),
+-+    tit: <div className="profile-bio">Information sur le profil</div>,
+-+  };
+- 
+--                    <EmailModal
+--                      info={userInfo}
+--                      onCancel={handleCancelMail}
+--                      visible={modalMailVisible}
+--                    />
+--                    <PasswordModal
+--                      onCancel={handleCancelPassword}
+--                      visible={modalPasswordVisible}
+--                    />
+--                    <InfoModal
+--                      info={userInfo}
+--                      onCancel={handleCancelInfo}
+--                      visible={modalInfoVisible}
+--                    />
+--                  </Space>
+--                </div>
+--              </div>
+-+  return (
+-+    <Card
+-+      bordered
+-+      style={{
+-+        width: 300,
+-+        border: "1px solid black",
+-+        backgroundColor: "#f0f2f5",
+-+      }}
+-+      cover={
+-+        <div
+-+          style={{
+-+            position: "relative",
+-+            display: "inline-block",
+-+            borderRadius: "10px",
+-+            overflow: "hidden",
+-+            marginTop: "30px",
+-+          }}
+-+          onMouseEnter={handleMouseEnter}
+-+          onMouseLeave={handleMouseLeave}
+-+        >
+-+          {imageUrl === null ? (
+-+            <Avatar
+-+              className="profile-picture"
+-+              size={128}
+-+              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
+-+            />
+-+          ) : (
+-+            <Avatar className="profile-picture" size={128} src={imageUrl} />
+-+          )}
+-+          {showButton && (
+-+            <div
+-+              style={{
+-+                position: "absolute",
+-+                top: 0,
+-+                left: 0,
+-+                width: "100%",
+-+                height: "100%",
+-+                backgroundColor: "rgba(0, 0, 0, 0.5)",
+-+                display: "flex",
+-+                alignItems: "center",
+-+                justifyContent: "center",
+-+              }}
+-+            >
+-+              <Upload
+-+                name="image"
+-+                method="put"
+-+                action="http://localhost:5000/api/v1/update-image"
+-+                headers={{
+-+                  Authorization: `Bearer ${ProfileServices.token}`,
+-+                }}
+-+                listType="picture-card"
+-+                className="avatar-uploader"
+-+                showUploadList={false}
+-+                beforeUpload={(file) => {
+-+                  const isJpgOrPng =
+-+                    file.type === "image/jpeg" || file.type === "image/png";
+-+                  if (!isJpgOrPng) {
+-+                    toast.error("You can only upload JPG/PNG file!");
+-+                  }
+-+                  const isLt2M = file.size / 1024 / 1024 < 2;
+-+                  if (!isLt2M) {
+-+                    toast.error("Image must smaller than 2MB!");
+-+                  }
+-+                  return isJpgOrPng && isLt2M;
+-+                }}
+-+                onChange={(info) => {
+-+                  if (info.file.status === "done") {
+-+                    const byteArray = new Uint8Array(
+-+                      info.file.response.image.data
+-+                    );
+-+                    const base64String = base64js.fromByteArray(byteArray);
+-+                    handleUpload(atob(base64String));
+-+                  }
+-+                }}
+-+                onRemove={handleRemove}
+-+              >
+-+                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
+-+              </Upload>
+-             </div>
+--          </Col>
+--        </Row>
+--      </div>
+--    </div>
+-+          )}
+-+        </div>
+-+      }
+-+      actions={[
+-+        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
+-+          <MailTwoTone
+-+            onClick={() => setModalMailVisible(true)}
+-+            key="MailSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+        <Tooltip
+-+          color="lime"
+-+          title="Mettre à jour le mot de passe"
+-+          key={"lime"}
+-+        >
+-+          <LockTwoTone
+-+            onClick={() => setModalPasswordVisible(true)}
+-+            key="passwordSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
+-+          <SettingTwoTone
+-+            onClick={() => setModalInfoVisible(true)}
+-+            key="passwordSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+      ]}
+-+      className="profile-page"
+-+    >
+-+      <EmailModal
+-+        info={userInfo}
+-+        onCancel={handleCancelMail}
+-+        visible={modalMailVisible}
+-+      />
+-+      <PasswordModal
+-+        onCancel={handleCancelPassword}
+-+        visible={modalPasswordVisible}
+-+      />
+-+      <InfoModal
+-+        info={userInfo}
+-+        onCancel={handleCancelInfo}
+-+        visible={modalInfoVisible}
+-+      />
+-+      <Meta title={obj.tit} description={obj.des} />
+-+    </Card>
+-   );
+- }
+- 
+-diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+-index 379ffcf..a0fd3a2 100644
+---- a/frontend/src/components/TableComponent.jsx
+-+++ b/frontend/src/components/TableComponent.jsx
+- const TableComponent = ({ data, isAdminPage, role }) => {
+-       columns={columns}
+-       dataSource={data}
+-       pagination={{
+--        pageSize: 7,
+-+        pageSize: 6,
+-       }}
+-       rowKey="_id"
+-     />
+-diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-index 2af2f6a..6d12ffe 100644
+---- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-+++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-
+--import { Button, Tooltip } from "antd";
+-+import { Button } from "antd";
+- import React, { useEffect, useState } from "react";
+- import TalanLogo from "../../assets/talan-logo.png";
+- import { AddUserModal } from "../../components/Modals";
+- const Page = () => {
+-     AdminServices.getAllUsers().then((res) => setData(res));
+-   }, [data]);
+-   return (
+--    <>
+--      <Tooltip title="Add new user">
+--        <Button
+--          size="large"
+--          type="primary"
+--          onClick={() => setModalAddUserForm(true)}
+--          style={{
+--            float: "right",
+--            marginBottom: "30px",
+--            backgroundColor: "#2596be",
+--            color: "white",
+--          }}
+--          shape="round"
+--          icon={<UserAddOutlined spin={true} />}
+--        >
+--          Add user
+--        </Button>
+--      </Tooltip>
+-+    <div>
+-+      <Button
+-+        size="large"
+-+        type="primary"
+-+        onClick={() => setModalAddUserForm(true)}
+-+        style={{
+-+          float: "right",
+-+          marginBottom: "15px",
+-+          backgroundColor: "#2596be",
+-+          color: "white",
+-+        }}
+-+        shape="round"
+-+        icon={<UserAddOutlined spin={true} />}
+-+      >
+-+        Add user
+-+      </Button>
+- 
+-       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+-       <TableComponent data={data} isAdminPage={true} />
+--    </>
+-+    </div>
+-   );
+- };
+++ b/backend/uploads/difference/diff-plus.txt
++  const outputFilePathWithPlus = path.join(generatedDirPath, "diff-plus.txt");
++  const outputFilePathWithMinus = path.join(generatedDirPath, "diff-minus.txt");
++    const inputLines = fs.readFileSync(bytecodeOutputPath, "utf-8").split("\n");
++    const linesWithPlus = inputLines.filter((line) => line.startsWith("+"));
++    const linesWithMinus = inputLines.filter((line) => line.startsWith("-"));
++
++    fs.writeFileSync(outputFilePathWithPlus, linesWithPlus.join("\n"), "utf-8");
++    fs.writeFileSync(
++      outputFilePathWithMinus,
++      linesWithMinus.join("\n"),
++      "utf-8"
++    );
++++ b/backend/uploads/difference/diff-minus.txt
++--- a/backend/controllers/testerController.js
++-const { spawn } = require("child_process");
++--- a/backend/routers/testerRouter.js
++--- /dev/null
++++ b/backend/uploads/difference/diff-plus.txt
+++++ b/backend/controllers/testerController.js
+++const { spawn, exec } = require("child_process");
+++const getDiff = (req, res) => {
+++  const command = "git diff HEAD~1 HEAD";
+++  const differenceFileName = `difference.txt`;
+++  const generatedDirPath = path.join(__dirname, "../", "/uploads/difference");
+++  const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
+++
+++  // create the 'generated' directory if it doesn't exist
+++  if (!fs.existsSync(generatedDirPath)) {
+++    fs.mkdirSync(generatedDirPath);
+++  }
+++
+++  exec(command, (error, stdout, stderr) => {
+++    if (error) {
+++      console.error(`Erreur: ${error.message}`);
+++      fs.writeFileSync(bytecodeOutputPath, error.message, "utf-8");
+++      res.send(`Erreur: ${error.message}`);
+++      return;
+++    }
+++    if (stderr) {
+++      console.error(`stderr: ${stderr}`);
+++      fs.writeFileSync(bytecodeOutputPath, stderr, "utf-8");
+++      res.send(`stderr: ${stderr}`);
+++      return;
+++    }
+++    console.log(`stdout: ${stdout}`);
+++    fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+++    res.send(`stdout: ${stdout}`);
+++  });
+++};
+++
+++exports.getDiff = getDiff;
+++++ b/backend/routers/testerRouter.js
+++router.get("/tester/diff", isUser, testerController.getDiff);
+++++ b/backend/uploads/difference/difference.txt
+++diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+++index 5e6836f..cd03b16 100644
+++--- a/frontend/src/components/Modals.jsx
++++++ b/frontend/src/components/Modals.jsx
+++ import AdminServices from "../services/AdminServices/AdminServices";
+++ import TesterService from "../services/TesterServices/TesterService";
+++ import { CircularChart } from "./ChartsComponent";
+++ import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
++++import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+++ 
+++ export const EmailModal = ({ visible, onCancel }) => {
+++   const [form] = Form.useForm();
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++     setMethod(value);
+++   };
+++   const [files, setFiles] = useState([]);
++++  const hasFiles = files.length > 0;
+++ 
+++   const onFinish = async (values) => {
+++     setLoading(true);
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 </Col>
+++               </Row>
+++             </Form.Item>
++++
+++             <Form.Item
+++               label="Upload bytecode"
+++               name="files"
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 { required: true, message: "Veuillez ajouter un fichier !" },
+++               ]}
+++             >
+++-              <div style={{ display: "flex", alignItems: "center" }}>
++++              <div style={{ display: "flex", flexDirection: "column" }}>
+++                 <label
+++                   htmlFor="file-upload"
+++-                  style={{ marginRight: "10px", fontSize: "16px" }}
++++                  style={{ fontSize: "16px", marginBottom: "10px" }}
+++                 >
+++                   Sélectionnez un ou plusieurs fichiers :
+++                 </label>
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                       cursor: "pointer",
+++                     }}
+++                   >
+++-                    Parcourir
++++                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+++                   </label>
+++-                  <div style={{ marginLeft: "10px" }}>
+++-                    {files.map((file) => (
+++-                      <span
++++                  <div
++++                    style={{
++++                      marginLeft: "10px",
++++                      display: "flex",
++++                      flexDirection: "column",
++++                    }}
++++                  >
++++                    {files.map((file, index) => (
++++                      <div
+++                         key={file.name}
+++-                        style={{ fontSize: "14px", fontWeight: "bold" }}
++++                        style={{
++++                          display: "flex",
++++                          alignItems: "center",
++++                          marginBottom: "5px",
++++                          padding: "5px",
++++                          border: "1px solid #ccc",
++++                          borderRadius: "5px",
++++                        }}
+++                       >
+++-                        {file.name}{" "}
+++-                      </span>
++++                        <span
++++                          style={{
++++                            fontSize: "14px",
++++                            fontWeight: "bold",
++++                            marginRight: "5px",
++++                            flexGrow: 1,
++++                            overflow: "hidden",
++++                            whiteSpace: "nowrap",
++++                            textOverflow: "ellipsis",
++++                          }}
++++                        >
++++                          {file.name}
++++                        </span>
++++                        <div
++++                          style={{
++++                            borderLeft: "1px solid #ccc",
++++                            paddingLeft: "5px",
++++                          }}
++++                        >
++++                          <Button
++++                            type="button"
++++                            onClick={() => {
++++                              const newFiles = [...files];
++++                              newFiles.splice(index, 1);
++++                              setFiles(newFiles);
++++                            }}
++++                          >
++++                            <DeleteTwoTone
++++                              twoToneColor="#ff4d4f"
++++                              style={{ fontSize: "20px" }}
++++                            />
++++                          </Button>
++++                        </div>
++++                      </div>
+++                     ))}
+++                   </div>
+++                 </div>
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++index c6531c8..c5b9a8a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.css
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++
+++ 
+++ .profile-info {
+++   margin-top: 20px;
++++  font-size: 28px;
++++  font-weight: bold;
+++ }
+++ 
+++ .profile-name {
+++-  font-size: 28px;
++++  font-size: 18px;
+++   font-weight: bold;
+++ }
+++ 
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++index 8dc1ac7..bd8e56a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++
+++ import React, { useEffect, useState } from "react";
+++-import { Avatar, Row, Col, Space, Button, Upload } from "antd";
++++import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+++ import "./ProfileComponent.css";
+++ import ProfileServices from "../../services/ProfileServices";
+++ import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+++-import { UploadOutlined } from "@ant-design/icons";
++++import {
++++  UploadOutlined,
++++  MailTwoTone,
++++  LockTwoTone,
++++  SettingTwoTone,
++++} from "@ant-design/icons";
+++ import { toast } from "react-toastify";
+++ import base64js from "base64-js";
++++const { Meta } = Card;
+++ 
+++ function ProfileComponent() {
+++   const [modalMailVisible, setModalMailVisible] = useState(false);
+++ function ProfileComponent() {
+++     setImageUrl(null);
+++   };
+++ 
+++-  return (
+++-    <div className="profile-page">
+++-      <div className="site-page-header-ghost-wrapper">
+++-        <Row justify="center">
+++-          <Col span={18}>
+++-            <div className="site-page-header-ghost-wrapper-content">
+++-              <div className="profile-container">
+++-                <Row gutter={16} justify="center">
+++-                  <Col span={6}>
+++-                    <div
+++-                      style={{
+++-                        position: "relative",
+++-                        display: "inline-block",
+++-                        borderRadius: "10px",
+++-                        overflow: "hidden",
+++-                        marginTop: "30px",
+++-                      }}
+++-                      onMouseEnter={handleMouseEnter}
+++-                      onMouseLeave={handleMouseLeave}
+++-                    >
+++-                      {imageUrl === null ? (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={
+++-                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+++-                          }
+++-                        />
+++-                      ) : (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={imageUrl}
+++-                        />
+++-                      )}
+++-                      {showButton && (
+++-                        <div
+++-                          style={{
+++-                            position: "absolute",
+++-                            top: 0,
+++-                            left: 0,
+++-                            width: "100%",
+++-                            height: "100%",
+++-                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+++-                            display: "flex",
+++-                            alignItems: "center",
+++-                            justifyContent: "center",
+++-                          }}
+++-                        >
+++-                          <Upload
+++-                            name="image"
+++-                            method="put"
+++-                            action="http://localhost:5000/api/v1/update-image"
+++-                            headers={{
+++-                              Authorization: `Bearer ${ProfileServices.token}`,
+++-                            }}
+++-                            listType="picture-card"
+++-                            className="avatar-uploader"
+++-                            showUploadList={false}
+++-                            beforeUpload={(file) => {
+++-                              const isJpgOrPng =
+++-                                file.type === "image/jpeg" ||
+++-                                file.type === "image/png";
+++-                              if (!isJpgOrPng) {
+++-                                toast.error(
+++-                                  "You can only upload JPG/PNG file!"
+++-                                );
+++-                              }
+++-                              const isLt2M = file.size / 1024 / 1024 < 2;
+++-                              if (!isLt2M) {
+++-                                toast.error("Image must smaller than 2MB!");
+++-                              }
+++-                              return isJpgOrPng && isLt2M;
+++-                            }}
+++-                            onChange={(info) => {
+++-                              if (info.file.status === "done") {
+++-                                const byteArray = new Uint8Array(
+++-                                  info.file.response.image.data
+++-                                );
+++-                                const base64String =
+++-                                  base64js.fromByteArray(byteArray);
+++-                                handleUpload(atob(base64String));
+++-                              }
+++-                            }}
+++-                            onRemove={handleRemove}
+++-                          >
+++-                            <UploadOutlined
+++-                              style={{ fontSize: "3rem", color: "white" }}
+++-                            />
+++-                          </Upload>
+++-                        </div>
+++-                      )}
+++-                    </div>
+++-                  </Col>
+++-                  <Col span={12}>
+++-                    <div className="profile-info">
+++-                      <h2
+++-                        className="profile-name"
+++-                        style={{ textTransform: "capitalize" }}
+++-                      >
+++-                        {userInfo.lastname} {userInfo.firstname}
+++-                      </h2>
+++-                      <p className="profile-email">Email: {userInfo.email}</p>
+++-                      <p className="profile-location">Role : {userInfo.role}</p>
+++-                    </div>
+++-                  </Col>
+++-                </Row>
+++-
+++-                <div className="profile-bio">
+++-                  <Space>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalMailVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ email
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalPasswordVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ mot de passe
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalInfoVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ profil
+++-                    </Button>
++++  const obj = {
++++    des: (
++++      <div>
++++        <h2
++++          className="profile-name"
++++          style={{ textTransform: "capitalize", color: "black" }}
++++        >
++++          {userInfo.lastname} {userInfo.firstname}
++++        </h2>
++++        <p className="profile-email">Email: {userInfo.email}</p>
++++        <p className="profile-location">
++++          Role :{" "}
++++          <Tag color="gold" style={{ fontSize: "20px" }}>
++++            {userInfo.role}
++++          </Tag>
++++        </p>
++++      </div>
++++    ),
++++    tit: <div className="profile-bio">Information sur le profil</div>,
++++  };
+++ 
+++-                    <EmailModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelMail}
+++-                      visible={modalMailVisible}
+++-                    />
+++-                    <PasswordModal
+++-                      onCancel={handleCancelPassword}
+++-                      visible={modalPasswordVisible}
+++-                    />
+++-                    <InfoModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelInfo}
+++-                      visible={modalInfoVisible}
+++-                    />
+++-                  </Space>
+++-                </div>
+++-              </div>
++++  return (
++++    <Card
++++      bordered
++++      style={{
++++        width: 300,
++++        border: "1px solid black",
++++        backgroundColor: "#f0f2f5",
++++      }}
++++      cover={
++++        <div
++++          style={{
++++            position: "relative",
++++            display: "inline-block",
++++            borderRadius: "10px",
++++            overflow: "hidden",
++++            marginTop: "30px",
++++          }}
++++          onMouseEnter={handleMouseEnter}
++++          onMouseLeave={handleMouseLeave}
++++        >
++++          {imageUrl === null ? (
++++            <Avatar
++++              className="profile-picture"
++++              size={128}
++++              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
++++            />
++++          ) : (
++++            <Avatar className="profile-picture" size={128} src={imageUrl} />
++++          )}
++++          {showButton && (
++++            <div
++++              style={{
++++                position: "absolute",
++++                top: 0,
++++                left: 0,
++++                width: "100%",
++++                height: "100%",
++++                backgroundColor: "rgba(0, 0, 0, 0.5)",
++++                display: "flex",
++++                alignItems: "center",
++++                justifyContent: "center",
++++              }}
++++            >
++++              <Upload
++++                name="image"
++++                method="put"
++++                action="http://localhost:5000/api/v1/update-image"
++++                headers={{
++++                  Authorization: `Bearer ${ProfileServices.token}`,
++++                }}
++++                listType="picture-card"
++++                className="avatar-uploader"
++++                showUploadList={false}
++++                beforeUpload={(file) => {
++++                  const isJpgOrPng =
++++                    file.type === "image/jpeg" || file.type === "image/png";
++++                  if (!isJpgOrPng) {
++++                    toast.error("You can only upload JPG/PNG file!");
++++                  }
++++                  const isLt2M = file.size / 1024 / 1024 < 2;
++++                  if (!isLt2M) {
++++                    toast.error("Image must smaller than 2MB!");
++++                  }
++++                  return isJpgOrPng && isLt2M;
++++                }}
++++                onChange={(info) => {
++++                  if (info.file.status === "done") {
++++                    const byteArray = new Uint8Array(
++++                      info.file.response.image.data
++++                    );
++++                    const base64String = base64js.fromByteArray(byteArray);
++++                    handleUpload(atob(base64String));
++++                  }
++++                }}
++++                onRemove={handleRemove}
++++              >
++++                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
++++              </Upload>
+++             </div>
+++-          </Col>
+++-        </Row>
+++-      </div>
+++-    </div>
++++          )}
++++        </div>
++++      }
++++      actions={[
++++        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
++++          <MailTwoTone
++++            onClick={() => setModalMailVisible(true)}
++++            key="MailSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip
++++          color="lime"
++++          title="Mettre à jour le mot de passe"
++++          key={"lime"}
++++        >
++++          <LockTwoTone
++++            onClick={() => setModalPasswordVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
++++          <SettingTwoTone
++++            onClick={() => setModalInfoVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++      ]}
++++      className="profile-page"
++++    >
++++      <EmailModal
++++        info={userInfo}
++++        onCancel={handleCancelMail}
++++        visible={modalMailVisible}
++++      />
++++      <PasswordModal
++++        onCancel={handleCancelPassword}
++++        visible={modalPasswordVisible}
++++      />
++++      <InfoModal
++++        info={userInfo}
++++        onCancel={handleCancelInfo}
++++        visible={modalInfoVisible}
++++      />
++++      <Meta title={obj.tit} description={obj.des} />
++++    </Card>
+++   );
+++ }
+++ 
+++diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+++index 379ffcf..a0fd3a2 100644
+++--- a/frontend/src/components/TableComponent.jsx
++++++ b/frontend/src/components/TableComponent.jsx
+++ const TableComponent = ({ data, isAdminPage, role }) => {
+++       columns={columns}
+++       dataSource={data}
+++       pagination={{
+++-        pageSize: 7,
++++        pageSize: 6,
+++       }}
+++       rowKey="_id"
+++     />
+++diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++index 2af2f6a..6d12ffe 100644
+++--- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
++++++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++-import { Button, Tooltip } from "antd";
++++import { Button } from "antd";
+++ import React, { useEffect, useState } from "react";
+++ import TalanLogo from "../../assets/talan-logo.png";
+++ import { AddUserModal } from "../../components/Modals";
+++ const Page = () => {
+++     AdminServices.getAllUsers().then((res) => setData(res));
+++   }, [data]);
+++   return (
+++-    <>
+++-      <Tooltip title="Add new user">
+++-        <Button
+++-          size="large"
+++-          type="primary"
+++-          onClick={() => setModalAddUserForm(true)}
+++-          style={{
+++-            float: "right",
+++-            marginBottom: "30px",
+++-            backgroundColor: "#2596be",
+++-            color: "white",
+++-          }}
+++-          shape="round"
+++-          icon={<UserAddOutlined spin={true} />}
+++-        >
+++-          Add user
+++-        </Button>
+++-      </Tooltip>
++++    <div>
++++      <Button
++++        size="large"
++++        type="primary"
++++        onClick={() => setModalAddUserForm(true)}
++++        style={{
++++          float: "right",
++++          marginBottom: "15px",
++++          backgroundColor: "#2596be",
++++          color: "white",
++++        }}
++++        shape="round"
++++        icon={<UserAddOutlined spin={true} />}
++++      >
++++        Add user
++++      </Button>
+++ 
+++       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+++       <TableComponent data={data} isAdminPage={true} />
+++-    </>
++++    </div>
+++   );
+++ };
+++ 
++++ b/backend/uploads/difference/difference.txt
++diff --git a/backend/controllers/testerController.js b/backend/controllers/testerController.js
++index e6e8832..b6dc6d2 100644
++--- a/backend/controllers/testerController.js
+++++ b/backend/controllers/testerController.js
++ const Test = require("../models/testModel");
++ const Rapport = require("../models/rapportModel");
++ const Bytecode = require("../models/bytecodeModel");
++ const util = require("util");
++-const { spawn } = require("child_process");
+++const { spawn, exec } = require("child_process");
++ const jwt = require("jsonwebtoken");
++ const execPromise = util.promisify(require("child_process").exec);
++ const path = require("path");
++ const executeTest = async (req, res) => {
++   });
+++const getDiff = (req, res) => {
+++  const command = "git diff HEAD~1 HEAD";
+++  const differenceFileName = `difference.txt`;
+++  const generatedDirPath = path.join(__dirname, "../", "/uploads/difference");
+++  const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
+++  // create the 'generated' directory if it doesn't exist
+++  if (!fs.existsSync(generatedDirPath)) {
+++    fs.mkdirSync(generatedDirPath);
+++  }
+++
+++  exec(command, (error, stdout, stderr) => {
+++    if (error) {
+++      console.error(`Erreur: ${error.message}`);
+++      fs.writeFileSync(bytecodeOutputPath, error.message, "utf-8");
+++      res.send(`Erreur: ${error.message}`);
+++      return;
+++    }
+++    if (stderr) {
+++      console.error(`stderr: ${stderr}`);
+++      fs.writeFileSync(bytecodeOutputPath, stderr, "utf-8");
+++      res.send(`stderr: ${stderr}`);
+++      return;
+++    }
+++    console.log(`stdout: ${stdout}`);
+++    fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+++    res.send(`stdout: ${stdout}`);
+++  });
+++};
+++
++ const getAllTests = (req, res) => {
++   Test.find();
++   var total = Test.count();
++ exports.TestStatePerUser = TestStatePerUser;
++ exports.TestsPerUser = TestsPerUser;
++ exports.getTestById = getTestById;
++ exports.getAllTestsByTester = getAllTestsByTester;
+++exports.getDiff = getDiff;
++diff --git a/backend/routers/testerRouter.js b/backend/routers/testerRouter.js
++index 2a04fd5..fc8cf39 100644
++--- a/backend/routers/testerRouter.js
+++++ b/backend/routers/testerRouter.js
++ router.get("/tester/test/tester", isUser, testerController.getAllTestsByTester);
++ router.get("/tester/test/number", isUser, testerController.TestStatePerUser);
++ router.get("/tester/test/all/", isUser, testerController.TestsPerUser);
++ router.get("/tester/test/:id", isUser, testerController.getTestById);
+++router.get("/tester/diff", isUser, testerController.getDiff);
++ module.exports = router;
++diff --git a/backend/uploads/difference/difference.txt b/backend/uploads/difference/difference.txt
++new file mode 100644
++index 0000000..ee4aea2
++--- /dev/null
+++++ b/backend/uploads/difference/difference.txt
++
+++diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+++index 5e6836f..cd03b16 100644
+++--- a/frontend/src/components/Modals.jsx
++++++ b/frontend/src/components/Modals.jsx
+++ import AdminServices from "../services/AdminServices/AdminServices";
+++ import TesterService from "../services/TesterServices/TesterService";
+++ import { CircularChart } from "./ChartsComponent";
+++ import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
++++import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+++ 
+++ export const EmailModal = ({ visible, onCancel }) => {
+++   const [form] = Form.useForm();
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++     setMethod(value);
+++   };
+++   const [files, setFiles] = useState([]);
++++  const hasFiles = files.length > 0;
+++ 
+++   const onFinish = async (values) => {
+++     setLoading(true);
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 </Col>
+++               </Row>
+++             </Form.Item>
++++
+++             <Form.Item
+++               label="Upload bytecode"
+++               name="files"
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 { required: true, message: "Veuillez ajouter un fichier !" },
+++               ]}
+++             >
+++-              <div style={{ display: "flex", alignItems: "center" }}>
++++              <div style={{ display: "flex", flexDirection: "column" }}>
+++                 <label
+++                   htmlFor="file-upload"
+++-                  style={{ marginRight: "10px", fontSize: "16px" }}
++++                  style={{ fontSize: "16px", marginBottom: "10px" }}
+++                 >
+++                   Sélectionnez un ou plusieurs fichiers :
+++                 </label>
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                       cursor: "pointer",
+++                     }}
+++                   >
+++-                    Parcourir
++++                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+++                   </label>
+++-                  <div style={{ marginLeft: "10px" }}>
+++-                    {files.map((file) => (
+++-                      <span
++++                  <div
++++                    style={{
++++                      marginLeft: "10px",
++++                      display: "flex",
++++                      flexDirection: "column",
++++                    }}
++++                  >
++++                    {files.map((file, index) => (
++++                      <div
+++                         key={file.name}
+++-                        style={{ fontSize: "14px", fontWeight: "bold" }}
++++                        style={{
++++                          display: "flex",
++++                          alignItems: "center",
++++                          marginBottom: "5px",
++++                          padding: "5px",
++++                          border: "1px solid #ccc",
++++                          borderRadius: "5px",
++++                        }}
+++                       >
+++-                        {file.name}{" "}
+++-                      </span>
++++                        <span
++++                          style={{
++++                            fontSize: "14px",
++++                            fontWeight: "bold",
++++                            marginRight: "5px",
++++                            flexGrow: 1,
++++                            overflow: "hidden",
++++                            whiteSpace: "nowrap",
++++                            textOverflow: "ellipsis",
++++                          }}
++++                        >
++++                          {file.name}
++++                        </span>
++++                        <div
++++                          style={{
++++                            borderLeft: "1px solid #ccc",
++++                            paddingLeft: "5px",
++++                          }}
++++                        >
++++                          <Button
++++                            type="button"
++++                            onClick={() => {
++++                              const newFiles = [...files];
++++                              newFiles.splice(index, 1);
++++                              setFiles(newFiles);
++++                            }}
++++                          >
++++                            <DeleteTwoTone
++++                              twoToneColor="#ff4d4f"
++++                              style={{ fontSize: "20px" }}
++++                            />
++++                          </Button>
++++                        </div>
++++                      </div>
+++                     ))}
+++                   </div>
+++                 </div>
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++index c6531c8..c5b9a8a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.css
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++
+++ 
+++ .profile-info {
+++   margin-top: 20px;
++++  font-size: 28px;
++++  font-weight: bold;
+++ }
+++ 
+++ .profile-name {
+++-  font-size: 28px;
++++  font-size: 18px;
+++   font-weight: bold;
+++ }
+++ 
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++index 8dc1ac7..bd8e56a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++
+++ import React, { useEffect, useState } from "react";
+++-import { Avatar, Row, Col, Space, Button, Upload } from "antd";
++++import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+++ import "./ProfileComponent.css";
+++ import ProfileServices from "../../services/ProfileServices";
+++ import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+++-import { UploadOutlined } from "@ant-design/icons";
++++import {
++++  UploadOutlined,
++++  MailTwoTone,
++++  LockTwoTone,
++++  SettingTwoTone,
++++} from "@ant-design/icons";
+++ import { toast } from "react-toastify";
+++ import base64js from "base64-js";
++++const { Meta } = Card;
+++ 
+++ function ProfileComponent() {
+++   const [modalMailVisible, setModalMailVisible] = useState(false);
+++ function ProfileComponent() {
+++     setImageUrl(null);
+++   };
+++ 
+++-  return (
+++-    <div className="profile-page">
+++-      <div className="site-page-header-ghost-wrapper">
+++-        <Row justify="center">
+++-          <Col span={18}>
+++-            <div className="site-page-header-ghost-wrapper-content">
+++-              <div className="profile-container">
+++-                <Row gutter={16} justify="center">
+++-                  <Col span={6}>
+++-                    <div
+++-                      style={{
+++-                        position: "relative",
+++-                        display: "inline-block",
+++-                        borderRadius: "10px",
+++-                        overflow: "hidden",
+++-                        marginTop: "30px",
+++-                      }}
+++-                      onMouseEnter={handleMouseEnter}
+++-                      onMouseLeave={handleMouseLeave}
+++-                    >
+++-                      {imageUrl === null ? (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={
+++-                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+++-                          }
+++-                        />
+++-                      ) : (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={imageUrl}
+++-                        />
+++-                      )}
+++-                      {showButton && (
+++-                        <div
+++-                          style={{
+++-                            position: "absolute",
+++-                            top: 0,
+++-                            left: 0,
+++-                            width: "100%",
+++-                            height: "100%",
+++-                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+++-                            display: "flex",
+++-                            alignItems: "center",
+++-                            justifyContent: "center",
+++-                          }}
+++-                        >
+++-                          <Upload
+++-                            name="image"
+++-                            method="put"
+++-                            action="http://localhost:5000/api/v1/update-image"
+++-                            headers={{
+++-                              Authorization: `Bearer ${ProfileServices.token}`,
+++-                            }}
+++-                            listType="picture-card"
+++-                            className="avatar-uploader"
+++-                            showUploadList={false}
+++-                            beforeUpload={(file) => {
+++-                              const isJpgOrPng =
+++-                                file.type === "image/jpeg" ||
+++-                                file.type === "image/png";
+++-                              if (!isJpgOrPng) {
+++-                                toast.error(
+++-                                  "You can only upload JPG/PNG file!"
+++-                                );
+++-                              }
+++-                              const isLt2M = file.size / 1024 / 1024 < 2;
+++-                              if (!isLt2M) {
+++-                                toast.error("Image must smaller than 2MB!");
+++-                              }
+++-                              return isJpgOrPng && isLt2M;
+++-                            }}
+++-                            onChange={(info) => {
+++-                              if (info.file.status === "done") {
+++-                                const byteArray = new Uint8Array(
+++-                                  info.file.response.image.data
+++-                                );
+++-                                const base64String =
+++-                                  base64js.fromByteArray(byteArray);
+++-                                handleUpload(atob(base64String));
+++-                              }
+++-                            }}
+++-                            onRemove={handleRemove}
+++-                          >
+++-                            <UploadOutlined
+++-                              style={{ fontSize: "3rem", color: "white" }}
+++-                            />
+++-                          </Upload>
+++-                        </div>
+++-                      )}
+++-                    </div>
+++-                  </Col>
+++-                  <Col span={12}>
+++-                    <div className="profile-info">
+++-                      <h2
+++-                        className="profile-name"
+++-                        style={{ textTransform: "capitalize" }}
+++-                      >
+++-                        {userInfo.lastname} {userInfo.firstname}
+++-                      </h2>
+++-                      <p className="profile-email">Email: {userInfo.email}</p>
+++-                      <p className="profile-location">Role : {userInfo.role}</p>
+++-                    </div>
+++-                  </Col>
+++-                </Row>
+++-
+++-                <div className="profile-bio">
+++-                  <Space>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalMailVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ email
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalPasswordVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ mot de passe
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalInfoVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ profil
+++-                    </Button>
++++  const obj = {
++++    des: (
++++      <div>
++++        <h2
++++          className="profile-name"
++++          style={{ textTransform: "capitalize", color: "black" }}
++++        >
++++          {userInfo.lastname} {userInfo.firstname}
++++        </h2>
++++        <p className="profile-email">Email: {userInfo.email}</p>
++++        <p className="profile-location">
++++          Role :{" "}
++++          <Tag color="gold" style={{ fontSize: "20px" }}>
++++            {userInfo.role}
++++          </Tag>
++++        </p>
++++      </div>
++++    ),
++++    tit: <div className="profile-bio">Information sur le profil</div>,
++++  };
+++ 
+++-                    <EmailModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelMail}
+++-                      visible={modalMailVisible}
+++-                    />
+++-                    <PasswordModal
+++-                      onCancel={handleCancelPassword}
+++-                      visible={modalPasswordVisible}
+++-                    />
+++-                    <InfoModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelInfo}
+++-                      visible={modalInfoVisible}
+++-                    />
+++-                  </Space>
+++-                </div>
+++-              </div>
++++  return (
++++    <Card
++++      bordered
++++      style={{
++++        width: 300,
++++        border: "1px solid black",
++++        backgroundColor: "#f0f2f5",
++++      }}
++++      cover={
++++        <div
++++          style={{
++++            position: "relative",
++++            display: "inline-block",
++++            borderRadius: "10px",
++++            overflow: "hidden",
++++            marginTop: "30px",
++++          }}
++++          onMouseEnter={handleMouseEnter}
++++          onMouseLeave={handleMouseLeave}
++++        >
++++          {imageUrl === null ? (
++++            <Avatar
++++              className="profile-picture"
++++              size={128}
++++              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
++++            />
++++          ) : (
++++            <Avatar className="profile-picture" size={128} src={imageUrl} />
++++          )}
++++          {showButton && (
++++            <div
++++              style={{
++++                position: "absolute",
++++                top: 0,
++++                left: 0,
++++                width: "100%",
++++                height: "100%",
++++                backgroundColor: "rgba(0, 0, 0, 0.5)",
++++                display: "flex",
++++                alignItems: "center",
++++                justifyContent: "center",
++++              }}
++++            >
++++              <Upload
++++                name="image"
++++                method="put"
++++                action="http://localhost:5000/api/v1/update-image"
++++                headers={{
++++                  Authorization: `Bearer ${ProfileServices.token}`,
++++                }}
++++                listType="picture-card"
++++                className="avatar-uploader"
++++                showUploadList={false}
++++                beforeUpload={(file) => {
++++                  const isJpgOrPng =
++++                    file.type === "image/jpeg" || file.type === "image/png";
++++                  if (!isJpgOrPng) {
++++                    toast.error("You can only upload JPG/PNG file!");
++++                  }
++++                  const isLt2M = file.size / 1024 / 1024 < 2;
++++                  if (!isLt2M) {
++++                    toast.error("Image must smaller than 2MB!");
++++                  }
++++                  return isJpgOrPng && isLt2M;
++++                }}
++++                onChange={(info) => {
++++                  if (info.file.status === "done") {
++++                    const byteArray = new Uint8Array(
++++                      info.file.response.image.data
++++                    );
++++                    const base64String = base64js.fromByteArray(byteArray);
++++                    handleUpload(atob(base64String));
++++                  }
++++                }}
++++                onRemove={handleRemove}
++++              >
++++                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
++++              </Upload>
+++             </div>
+++-          </Col>
+++-        </Row>
+++-      </div>
+++-    </div>
++++          )}
++++        </div>
++++      }
++++      actions={[
++++        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
++++          <MailTwoTone
++++            onClick={() => setModalMailVisible(true)}
++++            key="MailSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip
++++          color="lime"
++++          title="Mettre à jour le mot de passe"
++++          key={"lime"}
++++        >
++++          <LockTwoTone
++++            onClick={() => setModalPasswordVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
++++          <SettingTwoTone
++++            onClick={() => setModalInfoVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++      ]}
++++      className="profile-page"
++++    >
++++      <EmailModal
++++        info={userInfo}
++++        onCancel={handleCancelMail}
++++        visible={modalMailVisible}
++++      />
++++      <PasswordModal
++++        onCancel={handleCancelPassword}
++++        visible={modalPasswordVisible}
++++      />
++++      <InfoModal
++++        info={userInfo}
++++        onCancel={handleCancelInfo}
++++        visible={modalInfoVisible}
++++      />
++++      <Meta title={obj.tit} description={obj.des} />
++++    </Card>
+++   );
+++ }
+++ 
+++diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+++index 379ffcf..a0fd3a2 100644
+++--- a/frontend/src/components/TableComponent.jsx
++++++ b/frontend/src/components/TableComponent.jsx
+++ const TableComponent = ({ data, isAdminPage, role }) => {
+++       columns={columns}
+++       dataSource={data}
+++       pagination={{
+++-        pageSize: 7,
++++        pageSize: 6,
+++       }}
+++       rowKey="_id"
+++     />
+++diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++index 2af2f6a..6d12ffe 100644
+++--- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
++++++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++
+++-import { Button, Tooltip } from "antd";
++++import { Button } from "antd";
+++ import React, { useEffect, useState } from "react";
+++ import TalanLogo from "../../assets/talan-logo.png";
+++ import { AddUserModal } from "../../components/Modals";
+++ const Page = () => {
+++     AdminServices.getAllUsers().then((res) => setData(res));
+++   }, [data]);
+++   return (
+++-    <>
+++-      <Tooltip title="Add new user">
+++-        <Button
+++-          size="large"
+++-          type="primary"
+++-          onClick={() => setModalAddUserForm(true)}
+++-          style={{
+++-            float: "right",
+++-            marginBottom: "30px",
+++-            backgroundColor: "#2596be",
+++-            color: "white",
+++-          }}
+++-          shape="round"
+++-          icon={<UserAddOutlined spin={true} />}
+++-        >
+++-          Add user
+++-        </Button>
+++-      </Tooltip>
++++    <div>
++++      <Button
++++        size="large"
++++        type="primary"
++++        onClick={() => setModalAddUserForm(true)}
++++        style={{
++++          float: "right",
++++          marginBottom: "15px",
++++          backgroundColor: "#2596be",
++++          color: "white",
++++        }}
++++        shape="round"
++++        icon={<UserAddOutlined spin={true} />}
++++      >
++++        Add user
++++      </Button>
+++ 
+++       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+++       <TableComponent data={data} isAdminPage={true} />
+++-    </>
++++    </div>
+++   );
+++ };
+++ 
++diff --git a/backend/uploads/generated/643e644f0939939a38b5faf7.txt b/backend/uploads/generated/643e644f0939939a38b5faf7.txt
++new file mode 100644
++index 0000000..6c5e8c9
++Binary files /dev/null and b/backend/uploads/generated/643e644f0939939a38b5faf7.txt differ
++diff --git a/backend/uploads/generated/643e66110939939a38b64165.txt b/backend/uploads/generated/643e66110939939a38b64165.txt
++new file mode 100644
++index 0000000..6c5e8c9
++Binary files /dev/null and b/backend/uploads/generated/643e66110939939a38b64165.txt differ
+++ b/backend/uploads/difference/difference.txt
+index b6dc6d2..d2c8b58 100644
+ const getDiff = (req, res) => {
+   const generatedDirPath = path.join(__dirname, "../", "/uploads/difference");
+   const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
++  const outputFilePathWithPlus = path.join(generatedDirPath, "diff-plus.txt");
++  const outputFilePathWithMinus = path.join(generatedDirPath, "diff-minus.txt");
++
+   // create the 'generated' directory if it doesn't exist
+   if (!fs.existsSync(generatedDirPath)) {
+     fs.mkdirSync(generatedDirPath);
+ const getDiff = (req, res) => {
+     console.log(`stdout: ${stdout}`);
+     fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+     res.send(`stdout: ${stdout}`);
++    const inputLines = fs.readFileSync(bytecodeOutputPath, "utf-8").split("\n");
++    const linesWithPlus = inputLines.filter((line) => line.startsWith("+"));
++    const linesWithMinus = inputLines.filter((line) => line.startsWith("-"));
++    fs.writeFileSync(outputFilePathWithPlus, linesWithPlus.join("\n"), "utf-8");
++    fs.writeFileSync(
++      outputFilePathWithMinus,
++      linesWithMinus.join("\n"),
++      "utf-8"
++    );
+   });
+ };
+diff --git a/backend/uploads/difference/diff-minus.txt b/backend/uploads/difference/diff-minus.txt
+index 0000000..af27bf9
++++ b/backend/uploads/difference/diff-minus.txt
+
++--- a/backend/controllers/testerController.js
++-const { spawn } = require("child_process");
++--- a/backend/routers/testerRouter.js
++--- /dev/null
+\ No newline at end of file
+diff --git a/backend/uploads/difference/diff-plus.txt b/backend/uploads/difference/diff-plus.txt
+new file mode 100644
+index 0000000..e5d205d
+--- /dev/null
++++ b/backend/uploads/difference/diff-plus.txt
+
+++++ b/backend/controllers/testerController.js
+++const { spawn, exec } = require("child_process");
+++const getDiff = (req, res) => {
+++  const command = "git diff HEAD~1 HEAD";
+++  const differenceFileName = `difference.txt`;
+++  const generatedDirPath = path.join(__dirname, "../", "/uploads/difference");
+++  const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
+++
+++  // create the 'generated' directory if it doesn't exist
+++  if (!fs.existsSync(generatedDirPath)) {
+++    fs.mkdirSync(generatedDirPath);
+++  }
+++
+++  exec(command, (error, stdout, stderr) => {
+++    if (error) {
+++      console.error(`Erreur: ${error.message}`);
+++      fs.writeFileSync(bytecodeOutputPath, error.message, "utf-8");
+++      res.send(`Erreur: ${error.message}`);
+++      return;
+++    }
+++    if (stderr) {
+++      console.error(`stderr: ${stderr}`);
+++      fs.writeFileSync(bytecodeOutputPath, stderr, "utf-8");
+++      res.send(`stderr: ${stderr}`);
+++      return;
+++    }
+++    console.log(`stdout: ${stdout}`);
+++    fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+++    res.send(`stdout: ${stdout}`);
+++  });
+++};
+++
+++exports.getDiff = getDiff;
+++++ b/backend/routers/testerRouter.js
+++router.get("/tester/diff", isUser, testerController.getDiff);
+++++ b/backend/uploads/difference/difference.txt
+++diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+++index 5e6836f..cd03b16 100644
+++--- a/frontend/src/components/Modals.jsx
++++++ b/frontend/src/components/Modals.jsx
+++ import AdminServices from "../services/AdminServices/AdminServices";
+++ import TesterService from "../services/TesterServices/TesterService";
+++ import { CircularChart } from "./ChartsComponent";
+++ import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
++++import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+++ 
+++ export const EmailModal = ({ visible, onCancel }) => {
+++   const [form] = Form.useForm();
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++     setMethod(value);
+++   };
+++   const [files, setFiles] = useState([]);
++++  const hasFiles = files.length > 0;
+++ 
+++   const onFinish = async (values) => {
+++     setLoading(true);
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 </Col>
+++               </Row>
+++             </Form.Item>
++++
+++             <Form.Item
+++               label="Upload bytecode"
+++               name="files"
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 { required: true, message: "Veuillez ajouter un fichier !" },
+++               ]}
+++             >
+++-              <div style={{ display: "flex", alignItems: "center" }}>
++++              <div style={{ display: "flex", flexDirection: "column" }}>
+++                 <label
+++                   htmlFor="file-upload"
+++-                  style={{ marginRight: "10px", fontSize: "16px" }}
++++                  style={{ fontSize: "16px", marginBottom: "10px" }}
+++                 >
+++                   Sélectionnez un ou plusieurs fichiers :
+++                 </label>
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                       cursor: "pointer",
+++                     }}
+++                   >
+++-                    Parcourir
++++                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+++                   </label>
+++-                  <div style={{ marginLeft: "10px" }}>
+++-                    {files.map((file) => (
+++-                      <span
++++                  <div
++++                    style={{
++++                      marginLeft: "10px",
++++                      display: "flex",
++++                      flexDirection: "column",
++++                    }}
++++                  >
++++                    {files.map((file, index) => (
++++                      <div
+++                         key={file.name}
+++-                        style={{ fontSize: "14px", fontWeight: "bold" }}
++++                        style={{
++++                          display: "flex",
++++                          alignItems: "center",
++++                          marginBottom: "5px",
++++                          padding: "5px",
++++                          border: "1px solid #ccc",
++++                          borderRadius: "5px",
++++                        }}
+++                       >
+++-                        {file.name}{" "}
+++-                      </span>
++++                        <span
++++                          style={{
++++                            fontSize: "14px",
++++                            fontWeight: "bold",
++++                            marginRight: "5px",
++++                            flexGrow: 1,
++++                            overflow: "hidden",
++++                            whiteSpace: "nowrap",
++++                            textOverflow: "ellipsis",
++++                          }}
++++                        >
++++                          {file.name}
++++                        </span>
++++                        <div
++++                          style={{
++++                            borderLeft: "1px solid #ccc",
++++                            paddingLeft: "5px",
++++                          }}
++++                        >
++++                          <Button
++++                            type="button"
++++                            onClick={() => {
++++                              const newFiles = [...files];
++++                              newFiles.splice(index, 1);
++++                              setFiles(newFiles);
++++                            }}
++++                          >
++++                            <DeleteTwoTone
++++                              twoToneColor="#ff4d4f"
++++                              style={{ fontSize: "20px" }}
++++                            />
++++                          </Button>
++++                        </div>
++++                      </div>
+++                     ))}
+++                   </div>
+++                 </div>
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++index c6531c8..c5b9a8a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.css
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++ 
+++ .profile-info {
+++   margin-top: 20px;
++++  font-size: 28px;
++++  font-weight: bold;
+++ }
+++ 
+++ .profile-name {
+++-  font-size: 28px;
++++  font-size: 18px;
+++   font-weight: bold;
+++ }
+++ 
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++index 8dc1ac7..bd8e56a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++
+++ import React, { useEffect, useState } from "react";
+++-import { Avatar, Row, Col, Space, Button, Upload } from "antd";
++++import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+++ import "./ProfileComponent.css";
+++ import ProfileServices from "../../services/ProfileServices";
+++ import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+++-import { UploadOutlined } from "@ant-design/icons";
++++import {
++++  UploadOutlined,
++++  MailTwoTone,
++++  LockTwoTone,
++++  SettingTwoTone,
++++} from "@ant-design/icons";
+++ import { toast } from "react-toastify";
+++ import base64js from "base64-js";
++++const { Meta } = Card;
+++ 
+++ function ProfileComponent() {
+++   const [modalMailVisible, setModalMailVisible] = useState(false);
+++ function ProfileComponent() {
+++     setImageUrl(null);
+++   };
+++ 
+++-  return (
+++-    <div className="profile-page">
+++-      <div className="site-page-header-ghost-wrapper">
+++-        <Row justify="center">
+++-          <Col span={18}>
+++-            <div className="site-page-header-ghost-wrapper-content">
+++-              <div className="profile-container">
+++-                <Row gutter={16} justify="center">
+++-                  <Col span={6}>
+++-                    <div
+++-                      style={{
+++-                        position: "relative",
+++-                        display: "inline-block",
+++-                        borderRadius: "10px",
+++-                        overflow: "hidden",
+++-                        marginTop: "30px",
+++-                      }}
+++-                      onMouseEnter={handleMouseEnter}
+++-                      onMouseLeave={handleMouseLeave}
+++-                    >
+++-                      {imageUrl === null ? (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={
+++-                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+++-                          }
+++-                        />
+++-                      ) : (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={imageUrl}
+++-                        />
+++-                      )}
+++-                      {showButton && (
+++-                        <div
+++-                          style={{
+++-                            position: "absolute",
+++-                            top: 0,
+++-                            left: 0,
+++-                            width: "100%",
+++-                            height: "100%",
+++-                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+++-                            display: "flex",
+++-                            alignItems: "center",
+++-                            justifyContent: "center",
+++-                          }}
+++-                        >
+++-                          <Upload
+++-                            name="image"
+++-                            method="put"
+++-                            action="http://localhost:5000/api/v1/update-image"
+++-                            headers={{
+++-                              Authorization: `Bearer ${ProfileServices.token}`,
+++-                            }}
+++-                            listType="picture-card"
+++-                            className="avatar-uploader"
+++-                            showUploadList={false}
+++-                            beforeUpload={(file) => {
+++-                              const isJpgOrPng =
+++-                                file.type === "image/jpeg" ||
+++-                                file.type === "image/png";
+++-                              if (!isJpgOrPng) {
+++-                                toast.error(
+++-                                  "You can only upload JPG/PNG file!"
+++-                                );
+++-                              }
+++-                              const isLt2M = file.size / 1024 / 1024 < 2;
+++-                              if (!isLt2M) {
+++-                                toast.error("Image must smaller than 2MB!");
+++-                              }
+++-                              return isJpgOrPng && isLt2M;
+++-                            }}
+++-                            onChange={(info) => {
+++-                              if (info.file.status === "done") {
+++-                                const byteArray = new Uint8Array(
+++-                                  info.file.response.image.data
+++-                                );
+++-                                const base64String =
+++-                                  base64js.fromByteArray(byteArray);
+++-                                handleUpload(atob(base64String));
+++-                              }
+++-                            }}
+++-                            onRemove={handleRemove}
+++-                          >
+++-                            <UploadOutlined
+++-                              style={{ fontSize: "3rem", color: "white" }}
+++-                            />
+++-                          </Upload>
+++-                        </div>
+++-                      )}
+++-                    </div>
+++-                  </Col>
+++-                  <Col span={12}>
+++-                    <div className="profile-info">
+++-                      <h2
+++-                        className="profile-name"
+++-                        style={{ textTransform: "capitalize" }}
+++-                      >
+++-                        {userInfo.lastname} {userInfo.firstname}
+++-                      </h2>
+++-                      <p className="profile-email">Email: {userInfo.email}</p>
+++-                      <p className="profile-location">Role : {userInfo.role}</p>
+++-                    </div>
+++-                  </Col>
+++-                </Row>
+++-
+++-                <div className="profile-bio">
+++-                  <Space>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalMailVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ email
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalPasswordVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ mot de passe
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalInfoVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ profil
+++-                    </Button>
++++  const obj = {
++++    des: (
++++      <div>
++++        <h2
++++          className="profile-name"
++++          style={{ textTransform: "capitalize", color: "black" }}
++++        >
++++          {userInfo.lastname} {userInfo.firstname}
++++        </h2>
++++        <p className="profile-email">Email: {userInfo.email}</p>
++++        <p className="profile-location">
++++          Role :{" "}
++++          <Tag color="gold" style={{ fontSize: "20px" }}>
++++            {userInfo.role}
++++          </Tag>
++++        </p>
++++      </div>
++++    ),
++++    tit: <div className="profile-bio">Information sur le profil</div>,
++++  };
+++ 
+++-                    <EmailModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelMail}
+++-                      visible={modalMailVisible}
+++-                    />
+++-                    <PasswordModal
+++-                      onCancel={handleCancelPassword}
+++-                      visible={modalPasswordVisible}
+++-                    />
+++-                    <InfoModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelInfo}
+++-                      visible={modalInfoVisible}
+++-                    />
+++-                  </Space>
+++-                </div>
+++-              </div>
++++  return (
++++    <Card
++++      bordered
++++      style={{
++++        width: 300,
++++        border: "1px solid black",
++++        backgroundColor: "#f0f2f5",
++++      }}
++++      cover={
++++        <div
++++          style={{
++++            position: "relative",
++++            display: "inline-block",
++++            borderRadius: "10px",
++++            overflow: "hidden",
++++            marginTop: "30px",
++++          }}
++++          onMouseEnter={handleMouseEnter}
++++          onMouseLeave={handleMouseLeave}
++++        >
++++          {imageUrl === null ? (
++++            <Avatar
++++              className="profile-picture"
++++              size={128}
++++              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
++++            />
++++          ) : (
++++            <Avatar className="profile-picture" size={128} src={imageUrl} />
++++          )}
++++          {showButton && (
++++            <div
++++              style={{
++++                position: "absolute",
++++                top: 0,
++++                left: 0,
++++                width: "100%",
++++                height: "100%",
++++                backgroundColor: "rgba(0, 0, 0, 0.5)",
++++                display: "flex",
++++                alignItems: "center",
++++                justifyContent: "center",
++++              }}
++++            >
++++              <Upload
++++                name="image"
++++                method="put"
++++                action="http://localhost:5000/api/v1/update-image"
++++                headers={{
++++                  Authorization: `Bearer ${ProfileServices.token}`,
++++                }}
++++                listType="picture-card"
++++                className="avatar-uploader"
++++                showUploadList={false}
++++                beforeUpload={(file) => {
++++                  const isJpgOrPng =
++++                    file.type === "image/jpeg" || file.type === "image/png";
++++                  if (!isJpgOrPng) {
++++                    toast.error("You can only upload JPG/PNG file!");
++++                  }
++++                  const isLt2M = file.size / 1024 / 1024 < 2;
++++                  if (!isLt2M) {
++++                    toast.error("Image must smaller than 2MB!");
++++                  }
++++                  return isJpgOrPng && isLt2M;
++++                }}
++++                onChange={(info) => {
++++                  if (info.file.status === "done") {
++++                    const byteArray = new Uint8Array(
++++                      info.file.response.image.data
++++                    );
++++                    const base64String = base64js.fromByteArray(byteArray);
++++                    handleUpload(atob(base64String));
++++                  }
++++                }}
++++                onRemove={handleRemove}
++++              >
++++                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
++++              </Upload>
+++             </div>
+++-          </Col>
+++-        </Row>
+++-      </div>
+++-    </div>
++++          )}
++++        </div>
++++      }
++++      actions={[
++++        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
++++          <MailTwoTone
++++            onClick={() => setModalMailVisible(true)}
++++            key="MailSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip
++++          color="lime"
++++          title="Mettre à jour le mot de passe"
++++          key={"lime"}
++++        >
++++          <LockTwoTone
++++            onClick={() => setModalPasswordVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
++++          <SettingTwoTone
++++            onClick={() => setModalInfoVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++      ]}
++++      className="profile-page"
++++    >
++++      <EmailModal
++++        info={userInfo}
++++        onCancel={handleCancelMail}
++++        visible={modalMailVisible}
++++      />
++++      <PasswordModal
++++        onCancel={handleCancelPassword}
++++        visible={modalPasswordVisible}
++++      />
++++      <InfoModal
++++        info={userInfo}
++++        onCancel={handleCancelInfo}
++++        visible={modalInfoVisible}
++++      />
++++      <Meta title={obj.tit} description={obj.des} />
++++    </Card>
+++   );
+++ }
+++ 
+++diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+++index 379ffcf..a0fd3a2 100644
+++--- a/frontend/src/components/TableComponent.jsx
++++++ b/frontend/src/components/TableComponent.jsx
+++ const TableComponent = ({ data, isAdminPage, role }) => {
+++       columns={columns}
+++       dataSource={data}
+++       pagination={{
+++-        pageSize: 7,
++++        pageSize: 6,
+++       }}
+++       rowKey="_id"
+++     />
+++diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++index 2af2f6a..6d12ffe 100644
+++--- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
++++++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++
+++-import { Button, Tooltip } from "antd";
++++import { Button } from "antd";
+++ import React, { useEffect, useState } from "react";
+++ import TalanLogo from "../../assets/talan-logo.png";
+++ import { AddUserModal } from "../../components/Modals";
+++ const Page = () => {
+++     AdminServices.getAllUsers().then((res) => setData(res));
+++   }, [data]);
+++   return (
+++-    <>
+++-      <Tooltip title="Add new user">
+++-        <Button
+++-          size="large"
+++-          type="primary"
+++-          onClick={() => setModalAddUserForm(true)}
+++-          style={{
+++-            float: "right",
+++-            marginBottom: "30px",
+++-            backgroundColor: "#2596be",
+++-            color: "white",
+++-          }}
+++-          shape="round"
+++-          icon={<UserAddOutlined spin={true} />}
+++-        >
+++-          Add user
+++-        </Button>
+++-      </Tooltip>
++++    <div>
++++      <Button
++++        size="large"
++++        type="primary"
++++        onClick={() => setModalAddUserForm(true)}
++++        style={{
++++          float: "right",
++++          marginBottom: "15px",
++++          backgroundColor: "#2596be",
++++          color: "white",
++++        }}
++++        shape="round"
++++        icon={<UserAddOutlined spin={true} />}
++++      >
++++        Add user
++++      </Button>
+++ 
+++       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+++       <TableComponent data={data} isAdminPage={true} />
+++-    </>
++++    </div>
+++   );
+++ };
+++ 
+\ No newline at end of file
+diff --git a/backend/uploads/difference/difference.txt b/backend/uploads/difference/difference.txt
+index ee4aea2..98fdabf 100644
+--- a/backend/uploads/difference/difference.txt
++++ b/backend/uploads/difference/difference.txt
+
+-diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+-index 5e6836f..cd03b16 100644
+---- a/frontend/src/components/Modals.jsx
+-+++ b/frontend/src/components/Modals.jsx
+- import AdminServices from "../services/AdminServices/AdminServices";
+- import TesterService from "../services/TesterServices/TesterService";
+- import { CircularChart } from "./ChartsComponent";
+- import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
+-+import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+- 
+- export const EmailModal = ({ visible, onCancel }) => {
+-   const [form] = Form.useForm();
+- export const AddTestModal = ({ visible, onCancel }) => {
+-     setMethod(value);
+-   };
+-   const [files, setFiles] = useState([]);
+-+  const hasFiles = files.length > 0;
++diff --git a/backend/controllers/testerController.js b/backend/controllers/testerController.js
++index e6e8832..b6dc6d2 100644
++--- a/backend/controllers/testerController.js
+++++ b/backend/controllers/testerController.js
++ const Test = require("../models/testModel");
++ const Rapport = require("../models/rapportModel");
++ const Bytecode = require("../models/bytecodeModel");
++ const util = require("util");
++-const { spawn } = require("child_process");
+++const { spawn, exec } = require("child_process");
++ const jwt = require("jsonwebtoken");
++ const execPromise = util.promisify(require("child_process").exec);
++ const path = require("path");
++ const executeTest = async (req, res) => {
++   });
+  
+-   const onFinish = async (values) => {
+-     setLoading(true);
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                 </Col>
+-               </Row>
+-             </Form.Item>
+++const getDiff = (req, res) => {
+++  const command = "git diff HEAD~1 HEAD";
+++  const differenceFileName = `difference.txt`;
+++  const generatedDirPath = path.join(__dirname, "../", "/uploads/difference");
+++  const bytecodeOutputPath = path.join(generatedDirPath, differenceFileName);
+ +
+-             <Form.Item
+-               label="Upload bytecode"
+-               name="files"
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                 { required: true, message: "Veuillez ajouter un fichier !" },
+-               ]}
+-             >
+--              <div style={{ display: "flex", alignItems: "center" }}>
+-+              <div style={{ display: "flex", flexDirection: "column" }}>
+-                 <label
+-                   htmlFor="file-upload"
+--                  style={{ marginRight: "10px", fontSize: "16px" }}
+-+                  style={{ fontSize: "16px", marginBottom: "10px" }}
+-                 >
+-                   Sélectionnez un ou plusieurs fichiers :
+-                 </label>
+- export const AddTestModal = ({ visible, onCancel }) => {
+-                       cursor: "pointer",
+-                     }}
+-                   >
+--                    Parcourir
+-+                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+-                   </label>
+--                  <div style={{ marginLeft: "10px" }}>
+--                    {files.map((file) => (
+--                      <span
+-+                  <div
+-+                    style={{
+-+                      marginLeft: "10px",
+-+                      display: "flex",
+-+                      flexDirection: "column",
+-+                    }}
+-+                  >
+-+                    {files.map((file, index) => (
+-+                      <div
+-                         key={file.name}
+--                        style={{ fontSize: "14px", fontWeight: "bold" }}
+-+                        style={{
+-+                          display: "flex",
+-+                          alignItems: "center",
+-+                          marginBottom: "5px",
+-+                          padding: "5px",
+-+                          border: "1px solid #ccc",
+-+                          borderRadius: "5px",
+-+                        }}
+-                       >
+--                        {file.name}{" "}
+--                      </span>
+-+                        <span
+-+                          style={{
+-+                            fontSize: "14px",
+-+                            fontWeight: "bold",
+-+                            marginRight: "5px",
+-+                            flexGrow: 1,
+-+                            overflow: "hidden",
+-+                            whiteSpace: "nowrap",
+-+                            textOverflow: "ellipsis",
+-+                          }}
+-+                        >
+-+                          {file.name}
+-+                        </span>
+-+                        <div
+-+                          style={{
+-+                            borderLeft: "1px solid #ccc",
+-+                            paddingLeft: "5px",
+-+                          }}
+-+                        >
+-+                          <Button
+-+                            type="button"
+-+                            onClick={() => {
+-+                              const newFiles = [...files];
+-+                              newFiles.splice(index, 1);
+-+                              setFiles(newFiles);
+-+                            }}
+-+                          >
+-+                            <DeleteTwoTone
+-+                              twoToneColor="#ff4d4f"
+-+                              style={{ fontSize: "20px" }}
+-+                            />
+-+                          </Button>
+-+                        </div>
+-+                      </div>
+-                     ))}
+-                   </div>
+-                 </div>
+-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+-index c6531c8..c5b9a8a 100644
+---- a/frontend/src/components/ProfileComponent/ProfileComponent.css
+-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+-
+- 
+- .profile-info {
+-   margin-top: 20px;
+-+  font-size: 28px;
+-+  font-weight: bold;
+- }
+- 
+- .profile-name {
+--  font-size: 28px;
+-+  font-size: 18px;
+-   font-weight: bold;
+- }
+- 
+-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-index 8dc1ac7..bd8e56a 100644
+---- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+-
+- import React, { useEffect, useState } from "react";
+--import { Avatar, Row, Col, Space, Button, Upload } from "antd";
+-+import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+- import "./ProfileComponent.css";
+- import ProfileServices from "../../services/ProfileServices";
+- import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+--import { UploadOutlined } from "@ant-design/icons";
+-+import {
+-+  UploadOutlined,
+-+  MailTwoTone,
+-+  LockTwoTone,
+-+  SettingTwoTone,
+-+} from "@ant-design/icons";
+- import { toast } from "react-toastify";
+- import base64js from "base64-js";
+-+const { Meta } = Card;
+- 
+- function ProfileComponent() {
+-   const [modalMailVisible, setModalMailVisible] = useState(false);
+- function ProfileComponent() {
+-     setImageUrl(null);
+-   };
+- 
+--  return (
+--    <div className="profile-page">
+--      <div className="site-page-header-ghost-wrapper">
+--        <Row justify="center">
+--          <Col span={18}>
+--            <div className="site-page-header-ghost-wrapper-content">
+--              <div className="profile-container">
+--                <Row gutter={16} justify="center">
+--                  <Col span={6}>
+--                    <div
+--                      style={{
+--                        position: "relative",
+--                        display: "inline-block",
+--                        borderRadius: "10px",
+--                        overflow: "hidden",
+--                        marginTop: "30px",
+--                      }}
+--                      onMouseEnter={handleMouseEnter}
+--                      onMouseLeave={handleMouseLeave}
+--                    >
+--                      {imageUrl === null ? (
+--                        <Avatar
+--                          className="profile-picture"
+--                          size={128}
+--                          src={
+--                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+--                          }
+--                        />
+--                      ) : (
+--                        <Avatar
+--                          className="profile-picture"
+--                          size={128}
+--                          src={imageUrl}
+--                        />
+--                      )}
+--                      {showButton && (
+--                        <div
+--                          style={{
+--                            position: "absolute",
+--                            top: 0,
+--                            left: 0,
+--                            width: "100%",
+--                            height: "100%",
+--                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+--                            display: "flex",
+--                            alignItems: "center",
+--                            justifyContent: "center",
+--                          }}
+--                        >
+--                          <Upload
+--                            name="image"
+--                            method="put"
+--                            action="http://localhost:5000/api/v1/update-image"
+--                            headers={{
+--                              Authorization: `Bearer ${ProfileServices.token}`,
+--                            }}
+--                            listType="picture-card"
+--                            className="avatar-uploader"
+--                            showUploadList={false}
+--                            beforeUpload={(file) => {
+--                              const isJpgOrPng =
+--                                file.type === "image/jpeg" ||
+--                                file.type === "image/png";
+--                              if (!isJpgOrPng) {
+--                                toast.error(
+--                                  "You can only upload JPG/PNG file!"
+--                                );
+--                              }
+--                              const isLt2M = file.size / 1024 / 1024 < 2;
+--                              if (!isLt2M) {
+--                                toast.error("Image must smaller than 2MB!");
+--                              }
+--                              return isJpgOrPng && isLt2M;
+--                            }}
+--                            onChange={(info) => {
+--                              if (info.file.status === "done") {
+--                                const byteArray = new Uint8Array(
+--                                  info.file.response.image.data
+--                                );
+--                                const base64String =
+--                                  base64js.fromByteArray(byteArray);
+--                                handleUpload(atob(base64String));
+--                              }
+--                            }}
+--                            onRemove={handleRemove}
+--                          >
+--                            <UploadOutlined
+--                              style={{ fontSize: "3rem", color: "white" }}
+--                            />
+--                          </Upload>
+--                        </div>
+--                      )}
+--                    </div>
+--                  </Col>
+--                  <Col span={12}>
+--                    <div className="profile-info">
+--                      <h2
+--                        className="profile-name"
+--                        style={{ textTransform: "capitalize" }}
+--                      >
+--                        {userInfo.lastname} {userInfo.firstname}
+--                      </h2>
+--                      <p className="profile-email">Email: {userInfo.email}</p>
+--                      <p className="profile-location">Role : {userInfo.role}</p>
+--                    </div>
+--                  </Col>
+--                </Row>
+--
+--                <div className="profile-bio">
+--                  <Space>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalMailVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ email
+--                    </Button>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalPasswordVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ mot de passe
+--                    </Button>
+--                    <Button
+--                      type="primary"
+--                      onClick={() => setModalInfoVisible(true)}
+--                      style={{ backgroundColor: "#2596be", color: "white" }}
+--                    >
+--                      MAJ profil
+--                    </Button>
+-+  const obj = {
+-+    des: (
+-+      <div>
+-+        <h2
+-+          className="profile-name"
+-+          style={{ textTransform: "capitalize", color: "black" }}
+-+        >
+-+          {userInfo.lastname} {userInfo.firstname}
+-+        </h2>
+-+        <p className="profile-email">Email: {userInfo.email}</p>
+-+        <p className="profile-location">
+-+          Role :{" "}
+-+          <Tag color="gold" style={{ fontSize: "20px" }}>
+-+            {userInfo.role}
+-+          </Tag>
+-+        </p>
+-+      </div>
+-+    ),
+-+    tit: <div className="profile-bio">Information sur le profil</div>,
+-+  };
+- 
+--                    <EmailModal
+--                      info={userInfo}
+--                      onCancel={handleCancelMail}
+--                      visible={modalMailVisible}
+--                    />
+--                    <PasswordModal
+--                      onCancel={handleCancelPassword}
+--                      visible={modalPasswordVisible}
+--                    />
+--                    <InfoModal
+--                      info={userInfo}
+--                      onCancel={handleCancelInfo}
+--                      visible={modalInfoVisible}
+--                    />
+--                  </Space>
+--                </div>
+--              </div>
+-+  return (
+-+    <Card
+-+      bordered
+-+      style={{
+-+        width: 300,
+-+        border: "1px solid black",
+-+        backgroundColor: "#f0f2f5",
+-+      }}
+-+      cover={
+-+        <div
+-+          style={{
+-+            position: "relative",
+-+            display: "inline-block",
+-+            borderRadius: "10px",
+-+            overflow: "hidden",
+-+            marginTop: "30px",
+-+          }}
+-+          onMouseEnter={handleMouseEnter}
+-+          onMouseLeave={handleMouseLeave}
+-+        >
+-+          {imageUrl === null ? (
+-+            <Avatar
+-+              className="profile-picture"
+-+              size={128}
+-+              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
+-+            />
+-+          ) : (
+-+            <Avatar className="profile-picture" size={128} src={imageUrl} />
+-+          )}
+-+          {showButton && (
+-+            <div
+-+              style={{
+-+                position: "absolute",
+-+                top: 0,
+-+                left: 0,
+-+                width: "100%",
+-+                height: "100%",
+-+                backgroundColor: "rgba(0, 0, 0, 0.5)",
+-+                display: "flex",
+-+                alignItems: "center",
+-+                justifyContent: "center",
+-+              }}
+-+            >
+-+              <Upload
+-+                name="image"
+-+                method="put"
+-+                action="http://localhost:5000/api/v1/update-image"
+-+                headers={{
+-+                  Authorization: `Bearer ${ProfileServices.token}`,
+-+                }}
+-+                listType="picture-card"
+-+                className="avatar-uploader"
+-+                showUploadList={false}
+-+                beforeUpload={(file) => {
+-+                  const isJpgOrPng =
+-+                    file.type === "image/jpeg" || file.type === "image/png";
+-+                  if (!isJpgOrPng) {
+-+                    toast.error("You can only upload JPG/PNG file!");
+-+                  }
+-+                  const isLt2M = file.size / 1024 / 1024 < 2;
+-+                  if (!isLt2M) {
+-+                    toast.error("Image must smaller than 2MB!");
+-+                  }
+-+                  return isJpgOrPng && isLt2M;
+-+                }}
+-+                onChange={(info) => {
+-+                  if (info.file.status === "done") {
+-+                    const byteArray = new Uint8Array(
+-+                      info.file.response.image.data
+-+                    );
+-+                    const base64String = base64js.fromByteArray(byteArray);
+-+                    handleUpload(atob(base64String));
+-+                  }
+-+                }}
+-+                onRemove={handleRemove}
+-+              >
+-+                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
+-+              </Upload>
+-             </div>
+--          </Col>
+--        </Row>
+--      </div>
+--    </div>
+-+          )}
+-+        </div>
+-+      }
+-+      actions={[
+-+        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
+-+          <MailTwoTone
+-+            onClick={() => setModalMailVisible(true)}
+-+            key="MailSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+        <Tooltip
+-+          color="lime"
+-+          title="Mettre à jour le mot de passe"
+-+          key={"lime"}
+-+        >
+-+          <LockTwoTone
+-+            onClick={() => setModalPasswordVisible(true)}
+-+            key="passwordSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
+-+          <SettingTwoTone
+-+            onClick={() => setModalInfoVisible(true)}
+-+            key="passwordSetting"
+-+            style={{ fontSize: "30px" }}
+-+            twoToneColor="#4682b4"
+-+          />
+-+        </Tooltip>,
+-+      ]}
+-+      className="profile-page"
+-+    >
+-+      <EmailModal
+-+        info={userInfo}
+-+        onCancel={handleCancelMail}
+-+        visible={modalMailVisible}
+-+      />
+-+      <PasswordModal
+-+        onCancel={handleCancelPassword}
+-+        visible={modalPasswordVisible}
+-+      />
+-+      <InfoModal
+-+        info={userInfo}
+-+        onCancel={handleCancelInfo}
+-+        visible={modalInfoVisible}
+-+      />
+-+      <Meta title={obj.tit} description={obj.des} />
+-+    </Card>
+-   );
+- }
+- 
+-diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+-index 379ffcf..a0fd3a2 100644
+---- a/frontend/src/components/TableComponent.jsx
+-+++ b/frontend/src/components/TableComponent.jsx
+- const TableComponent = ({ data, isAdminPage, role }) => {
+-       columns={columns}
+-       dataSource={data}
+-       pagination={{
+--        pageSize: 7,
+-+        pageSize: 6,
+-       }}
+-       rowKey="_id"
+-     />
+-diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-index 2af2f6a..6d12ffe 100644
+---- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-+++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+-
+--import { Button, Tooltip } from "antd";
+-+import { Button } from "antd";
+- import React, { useEffect, useState } from "react";
+- import TalanLogo from "../../assets/talan-logo.png";
+- import { AddUserModal } from "../../components/Modals";
+- const Page = () => {
+-     AdminServices.getAllUsers().then((res) => setData(res));
+-   }, [data]);
+-   return (
+--    <>
+--      <Tooltip title="Add new user">
+--        <Button
+--          size="large"
+--          type="primary"
+--          onClick={() => setModalAddUserForm(true)}
+--          style={{
+--            float: "right",
+--            marginBottom: "30px",
+--            backgroundColor: "#2596be",
+--            color: "white",
+--          }}
+--          shape="round"
+--          icon={<UserAddOutlined spin={true} />}
+--        >
+--          Add user
+--        </Button>
+--      </Tooltip>
+-+    <div>
+-+      <Button
+-+        size="large"
+-+        type="primary"
+-+        onClick={() => setModalAddUserForm(true)}
+-+        style={{
+-+          float: "right",
+-+          marginBottom: "15px",
+-+          backgroundColor: "#2596be",
+-+          color: "white",
+-+        }}
+-+        shape="round"
+-+        icon={<UserAddOutlined spin={true} />}
+-+      >
+-+        Add user
+-+      </Button>
+- 
+-       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+-       <TableComponent data={data} isAdminPage={true} />
+--    </>
+-+    </div>
+-   );
+- };
+++  // create the 'generated' directory if it doesn't exist
+++  if (!fs.existsSync(generatedDirPath)) {
+++    fs.mkdirSync(generatedDirPath);
+++  }
+++
+++  exec(command, (error, stdout, stderr) => {
+++    if (error) {
+++      console.error(`Erreur: ${error.message}`);
+++      fs.writeFileSync(bytecodeOutputPath, error.message, "utf-8");
+++      res.send(`Erreur: ${error.message}`);
+++      return;
+++    }
+++    if (stderr) {
+++      console.error(`stderr: ${stderr}`);
+++      fs.writeFileSync(bytecodeOutputPath, stderr, "utf-8");
+++      res.send(`stderr: ${stderr}`);
+++      return;
+++    }
+++    console.log(`stdout: ${stdout}`);
+++    fs.writeFileSync(bytecodeOutputPath, stdout, "utf-8");
+++    res.send(`stdout: ${stdout}`);
+++  });
+++};
+++
++ const getAllTests = (req, res) => {
++   Test.find();
++   var total = Test.count();
++ exports.TestStatePerUser = TestStatePerUser;
++ exports.TestsPerUser = TestsPerUser;
++ exports.getTestById = getTestById;
++ exports.getAllTestsByTester = getAllTestsByTester;
+++exports.getDiff = getDiff;
++diff --git a/backend/routers/testerRouter.js b/backend/routers/testerRouter.js
++index 2a04fd5..fc8cf39 100644
++--- a/backend/routers/testerRouter.js
+++++ b/backend/routers/testerRouter.js
++ router.get("/tester/test/tester", isUser, testerController.getAllTestsByTester);
++ router.get("/tester/test/number", isUser, testerController.TestStatePerUser);
++ router.get("/tester/test/all/", isUser, testerController.TestsPerUser);
++ router.get("/tester/test/:id", isUser, testerController.getTestById);
+++router.get("/tester/diff", isUser, testerController.getDiff);
+  
++ module.exports = router;
++diff --git a/backend/uploads/difference/difference.txt b/backend/uploads/difference/difference.txt
++new file mode 100644
++index 0000000..ee4aea2
++--- /dev/null
+++++ b/backend/uploads/difference/difference.txt
++
+++diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
+++index 5e6836f..cd03b16 100644
+++--- a/frontend/src/components/Modals.jsx
++++++ b/frontend/src/components/Modals.jsx
+++ import AdminServices from "../services/AdminServices/AdminServices";
+++ import TesterService from "../services/TesterServices/TesterService";
+++ import { CircularChart } from "./ChartsComponent";
+++ import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
++++import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
+++ 
+++ export const EmailModal = ({ visible, onCancel }) => {
+++   const [form] = Form.useForm();
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++     setMethod(value);
+++   };
+++   const [files, setFiles] = useState([]);
++++  const hasFiles = files.length > 0;
+++ 
+++   const onFinish = async (values) => {
+++     setLoading(true);
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 </Col>
+++               </Row>
+++             </Form.Item>
++++
+++             <Form.Item
+++               label="Upload bytecode"
+++               name="files"
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                 { required: true, message: "Veuillez ajouter un fichier !" },
+++               ]}
+++             >
+++-              <div style={{ display: "flex", alignItems: "center" }}>
++++              <div style={{ display: "flex", flexDirection: "column" }}>
+++                 <label
+++                   htmlFor="file-upload"
+++-                  style={{ marginRight: "10px", fontSize: "16px" }}
++++                  style={{ fontSize: "16px", marginBottom: "10px" }}
+++                 >
+++                   Sélectionnez un ou plusieurs fichiers :
+++                 </label>
+++ export const AddTestModal = ({ visible, onCancel }) => {
+++                       cursor: "pointer",
+++                     }}
+++                   >
+++-                    Parcourir
++++                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
+++                   </label>
+++-                  <div style={{ marginLeft: "10px" }}>
+++-                    {files.map((file) => (
+++-                      <span
++++                  <div
++++                    style={{
++++                      marginLeft: "10px",
++++                      display: "flex",
++++                      flexDirection: "column",
++++                    }}
++++                  >
++++                    {files.map((file, index) => (
++++                      <div
+++                         key={file.name}
+++-                        style={{ fontSize: "14px", fontWeight: "bold" }}
++++                        style={{
++++                          display: "flex",
++++                          alignItems: "center",
++++                          marginBottom: "5px",
++++                          padding: "5px",
++++                          border: "1px solid #ccc",
++++                          borderRadius: "5px",
++++                        }}
+++                       >
+++-                        {file.name}{" "}
+++-                      </span>
++++                        <span
++++                          style={{
++++                            fontSize: "14px",
++++                            fontWeight: "bold",
++++                            marginRight: "5px",
++++                            flexGrow: 1,
++++                            overflow: "hidden",
++++                            whiteSpace: "nowrap",
++++                            textOverflow: "ellipsis",
++++                          }}
++++                        >
++++                          {file.name}
++++                        </span>
++++                        <div
++++                          style={{
++++                            borderLeft: "1px solid #ccc",
++++                            paddingLeft: "5px",
++++                          }}
++++                        >
++++                          <Button
++++                            type="button"
++++                            onClick={() => {
++++                              const newFiles = [...files];
++++                              newFiles.splice(index, 1);
++++                              setFiles(newFiles);
++++                            }}
++++                          >
++++                            <DeleteTwoTone
++++                              twoToneColor="#ff4d4f"
++++                              style={{ fontSize: "20px" }}
++++                            />
++++                          </Button>
++++                        </div>
++++                      </div>
+++                     ))}
+++                   </div>
+++                 </div>
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++index c6531c8..c5b9a8a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.css
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
+++
+++ 
+++ .profile-info {
+++   margin-top: 20px;
++++  font-size: 28px;
++++  font-weight: bold;
+++ }
+++ 
+++ .profile-name {
+++-  font-size: 28px;
++++  font-size: 18px;
+++   font-weight: bold;
+++ }
+++ 
+++diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++index 8dc1ac7..bd8e56a 100644
+++--- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
++++++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
+++
+++ import React, { useEffect, useState } from "react";
+++-import { Avatar, Row, Col, Space, Button, Upload } from "antd";
++++import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
+++ import "./ProfileComponent.css";
+++ import ProfileServices from "../../services/ProfileServices";
+++ import { PasswordModal, EmailModal, InfoModal } from "../Modals";
+++-import { UploadOutlined } from "@ant-design/icons";
++++import {
++++  UploadOutlined,
++++  MailTwoTone,
++++  LockTwoTone,
++++  SettingTwoTone,
++++} from "@ant-design/icons";
+++ import { toast } from "react-toastify";
+++ import base64js from "base64-js";
++++const { Meta } = Card;
+++ 
+++ function ProfileComponent() {
+++   const [modalMailVisible, setModalMailVisible] = useState(false);
+++ function ProfileComponent() {
+++     setImageUrl(null);
+++   };
+++ 
+++-  return (
+++-    <div className="profile-page">
+++-      <div className="site-page-header-ghost-wrapper">
+++-        <Row justify="center">
+++-          <Col span={18}>
+++-            <div className="site-page-header-ghost-wrapper-content">
+++-              <div className="profile-container">
+++-                <Row gutter={16} justify="center">
+++-                  <Col span={6}>
+++-                    <div
+++-                      style={{
+++-                        position: "relative",
+++-                        display: "inline-block",
+++-                        borderRadius: "10px",
+++-                        overflow: "hidden",
+++-                        marginTop: "30px",
+++-                      }}
+++-                      onMouseEnter={handleMouseEnter}
+++-                      onMouseLeave={handleMouseLeave}
+++-                    >
+++-                      {imageUrl === null ? (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={
+++-                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
+++-                          }
+++-                        />
+++-                      ) : (
+++-                        <Avatar
+++-                          className="profile-picture"
+++-                          size={128}
+++-                          src={imageUrl}
+++-                        />
+++-                      )}
+++-                      {showButton && (
+++-                        <div
+++-                          style={{
+++-                            position: "absolute",
+++-                            top: 0,
+++-                            left: 0,
+++-                            width: "100%",
+++-                            height: "100%",
+++-                            backgroundColor: "rgba(0, 0, 0, 0.5)",
+++-                            display: "flex",
+++-                            alignItems: "center",
+++-                            justifyContent: "center",
+++-                          }}
+++-                        >
+++-                          <Upload
+++-                            name="image"
+++-                            method="put"
+++-                            action="http://localhost:5000/api/v1/update-image"
+++-                            headers={{
+++-                              Authorization: `Bearer ${ProfileServices.token}`,
+++-                            }}
+++-                            listType="picture-card"
+++-                            className="avatar-uploader"
+++-                            showUploadList={false}
+++-                            beforeUpload={(file) => {
+++-                              const isJpgOrPng =
+++-                                file.type === "image/jpeg" ||
+++-                                file.type === "image/png";
+++-                              if (!isJpgOrPng) {
+++-                                toast.error(
+++-                                  "You can only upload JPG/PNG file!"
+++-                                );
+++-                              }
+++-                              const isLt2M = file.size / 1024 / 1024 < 2;
+++-                              if (!isLt2M) {
+++-                                toast.error("Image must smaller than 2MB!");
+++-                              }
+++-                              return isJpgOrPng && isLt2M;
+++-                            }}
+++-                            onChange={(info) => {
+++-                              if (info.file.status === "done") {
+++-                                const byteArray = new Uint8Array(
+++-                                  info.file.response.image.data
+++-                                );
+++-                                const base64String =
+++-                                  base64js.fromByteArray(byteArray);
+++-                                handleUpload(atob(base64String));
+++-                              }
+++-                            }}
+++-                            onRemove={handleRemove}
+++-                          >
+++-                            <UploadOutlined
+++-                              style={{ fontSize: "3rem", color: "white" }}
+++-                            />
+++-                          </Upload>
+++-                        </div>
+++-                      )}
+++-                    </div>
+++-                  </Col>
+++-                  <Col span={12}>
+++-                    <div className="profile-info">
+++-                      <h2
+++-                        className="profile-name"
+++-                        style={{ textTransform: "capitalize" }}
+++-                      >
+++-                        {userInfo.lastname} {userInfo.firstname}
+++-                      </h2>
+++-                      <p className="profile-email">Email: {userInfo.email}</p>
+++-                      <p className="profile-location">Role : {userInfo.role}</p>
+++-                    </div>
+++-                  </Col>
+++-                </Row>
+++-
+++-                <div className="profile-bio">
+++-                  <Space>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalMailVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ email
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalPasswordVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ mot de passe
+++-                    </Button>
+++-                    <Button
+++-                      type="primary"
+++-                      onClick={() => setModalInfoVisible(true)}
+++-                      style={{ backgroundColor: "#2596be", color: "white" }}
+++-                    >
+++-                      MAJ profil
+++-                    </Button>
++++  const obj = {
++++    des: (
++++      <div>
++++        <h2
++++          className="profile-name"
++++          style={{ textTransform: "capitalize", color: "black" }}
++++        >
++++          {userInfo.lastname} {userInfo.firstname}
++++        </h2>
++++        <p className="profile-email">Email: {userInfo.email}</p>
++++        <p className="profile-location">
++++          Role :{" "}
++++          <Tag color="gold" style={{ fontSize: "20px" }}>
++++            {userInfo.role}
++++          </Tag>
++++        </p>
++++      </div>
++++    ),
++++    tit: <div className="profile-bio">Information sur le profil</div>,
++++  };
+++ 
+++-                    <EmailModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelMail}
+++-                      visible={modalMailVisible}
+++-                    />
+++-                    <PasswordModal
+++-                      onCancel={handleCancelPassword}
+++-                      visible={modalPasswordVisible}
+++-                    />
+++-                    <InfoModal
+++-                      info={userInfo}
+++-                      onCancel={handleCancelInfo}
+++-                      visible={modalInfoVisible}
+++-                    />
+++-                  </Space>
+++-                </div>
+++-              </div>
++++  return (
++++    <Card
++++      bordered
++++      style={{
++++        width: 300,
++++        border: "1px solid black",
++++        backgroundColor: "#f0f2f5",
++++      }}
++++      cover={
++++        <div
++++          style={{
++++            position: "relative",
++++            display: "inline-block",
++++            borderRadius: "10px",
++++            overflow: "hidden",
++++            marginTop: "30px",
++++          }}
++++          onMouseEnter={handleMouseEnter}
++++          onMouseLeave={handleMouseLeave}
++++        >
++++          {imageUrl === null ? (
++++            <Avatar
++++              className="profile-picture"
++++              size={128}
++++              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
++++            />
++++          ) : (
++++            <Avatar className="profile-picture" size={128} src={imageUrl} />
++++          )}
++++          {showButton && (
++++            <div
++++              style={{
++++                position: "absolute",
++++                top: 0,
++++                left: 0,
++++                width: "100%",
++++                height: "100%",
++++                backgroundColor: "rgba(0, 0, 0, 0.5)",
++++                display: "flex",
++++                alignItems: "center",
++++                justifyContent: "center",
++++              }}
++++            >
++++              <Upload
++++                name="image"
++++                method="put"
++++                action="http://localhost:5000/api/v1/update-image"
++++                headers={{
++++                  Authorization: `Bearer ${ProfileServices.token}`,
++++                }}
++++                listType="picture-card"
++++                className="avatar-uploader"
++++                showUploadList={false}
++++                beforeUpload={(file) => {
++++                  const isJpgOrPng =
++++                    file.type === "image/jpeg" || file.type === "image/png";
++++                  if (!isJpgOrPng) {
++++                    toast.error("You can only upload JPG/PNG file!");
++++                  }
++++                  const isLt2M = file.size / 1024 / 1024 < 2;
++++                  if (!isLt2M) {
++++                    toast.error("Image must smaller than 2MB!");
++++                  }
++++                  return isJpgOrPng && isLt2M;
++++                }}
++++                onChange={(info) => {
++++                  if (info.file.status === "done") {
++++                    const byteArray = new Uint8Array(
++++                      info.file.response.image.data
++++                    );
++++                    const base64String = base64js.fromByteArray(byteArray);
++++                    handleUpload(atob(base64String));
++++                  }
++++                }}
++++                onRemove={handleRemove}
++++              >
++++                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
++++              </Upload>
+++             </div>
+++-          </Col>
+++-        </Row>
+++-      </div>
+++-    </div>
++++          )}
++++        </div>
++++      }
++++      actions={[
++++        <Tooltip color="cyan" title="Mettre à jour l'adresse mail" key={"cyan"}>
++++          <MailTwoTone
++++            onClick={() => setModalMailVisible(true)}
++++            key="MailSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip
++++          color="lime"
++++          title="Mettre à jour le mot de passe"
++++          key={"lime"}
++++        >
++++          <LockTwoTone
++++            onClick={() => setModalPasswordVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++        <Tooltip color="purple" title="Mettre à jour vos info" key={"purple"}>
++++          <SettingTwoTone
++++            onClick={() => setModalInfoVisible(true)}
++++            key="passwordSetting"
++++            style={{ fontSize: "30px" }}
++++            twoToneColor="#4682b4"
++++          />
++++        </Tooltip>,
++++      ]}
++++      className="profile-page"
++++    >
++++      <EmailModal
++++        info={userInfo}
++++        onCancel={handleCancelMail}
++++        visible={modalMailVisible}
++++      />
++++      <PasswordModal
++++        onCancel={handleCancelPassword}
++++        visible={modalPasswordVisible}
++++      />
++++      <InfoModal
++++        info={userInfo}
++++        onCancel={handleCancelInfo}
++++        visible={modalInfoVisible}
++++      />
++++      <Meta title={obj.tit} description={obj.des} />
++++    </Card>
+++   );
+++ }
+++ 
+++diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
+++index 379ffcf..a0fd3a2 100644
+++--- a/frontend/src/components/TableComponent.jsx
++++++ b/frontend/src/components/TableComponent.jsx
+++ const TableComponent = ({ data, isAdminPage, role }) => {
+++       columns={columns}
+++       dataSource={data}
+++       pagination={{
+++-        pageSize: 7,
++++        pageSize: 6,
+++       }}
+++       rowKey="_id"
+++     />
+++diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++index 2af2f6a..6d12ffe 100644
+++--- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
++++++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
+++
+++-import { Button, Tooltip } from "antd";
++++import { Button } from "antd";
+++ import React, { useEffect, useState } from "react";
+++ import TalanLogo from "../../assets/talan-logo.png";
+++ import { AddUserModal } from "../../components/Modals";
+++ const Page = () => {
+++     AdminServices.getAllUsers().then((res) => setData(res));
+++   }, [data]);
+++   return (
+++-    <>
+++-      <Tooltip title="Add new user">
+++-        <Button
+++-          size="large"
+++-          type="primary"
+++-          onClick={() => setModalAddUserForm(true)}
+++-          style={{
+++-            float: "right",
+++-            marginBottom: "30px",
+++-            backgroundColor: "#2596be",
+++-            color: "white",
+++-          }}
+++-          shape="round"
+++-          icon={<UserAddOutlined spin={true} />}
+++-        >
+++-          Add user
+++-        </Button>
+++-      </Tooltip>
++++    <div>
++++      <Button
++++        size="large"
++++        type="primary"
++++        onClick={() => setModalAddUserForm(true)}
++++        style={{
++++          float: "right",
++++          marginBottom: "15px",
++++          backgroundColor: "#2596be",
++++          color: "white",
++++        }}
++++        shape="round"
++++        icon={<UserAddOutlined spin={true} />}
++++      >
++++        Add user
++++      </Button>
+++ 
+++       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
+++       <TableComponent data={data} isAdminPage={true} />
+++-    </>
++++    </div>
+++   );
+++ };
+++ 
++diff --git a/backend/uploads/generated/643e644f0939939a38b5faf7.txt b/backend/uploads/generated/643e644f0939939a38b5faf7.txt
++new file mode 100644
++index 0000000..6c5e8c9
++Binary files /dev/null and b/backend/uploads/generated/643e644f0939939a38b5faf7.txt differ
++diff --git a/backend/uploads/generated/643e66110939939a38b64165.txt b/backend/uploads/generated/643e66110939939a38b64165.txt
++new file mode 100644
++index 0000000..6c5e8c9
++Binary files /dev/null and b/backend/uploads/generated/643e66110939939a38b64165.txt differ
+diff --git a/backend/uploads/generated/64354d9a9f53b8ce1d1e146f.txt b/backend/uploads/generated/64354d9a9f53b8ce1d1e146f.txt
+deleted file mode 100644
+index f575f3a..0000000
+Binary files a/backend/uploads/generated/64354d9a9f53b8ce1d1e146f.txt and /dev/null differ
+diff --git a/backend/uploads/generated/64355ee99da1b48b521b6ae9.txt b/backend/uploads/generated/64355ee99da1b48b521b6ae9.txt
+deleted file mode 100644
+index 6c5e8c9..0000000
+Binary files a/backend/uploads/generated/64355ee99da1b48b521b6ae9.txt and /dev/null differ
+diff --git a/backend/uploads/generated/64356166936ac0a4e8e50501.txt b/backend/uploads/generated/64356166936ac0a4e8e50501.txt
+deleted file mode 100644
+index 6c5e8c9..0000000
+Binary files a/backend/uploads/generated/64356166936ac0a4e8e50501.txt and /dev/null differ
+diff --git a/backend/uploads/generated/643561ea936ac0a4e8e50a79.txt b/backend/uploads/generated/643561ea936ac0a4e8e50a79.txt
+deleted file mode 100644
+index 6c5e8c9..0000000
+Binary files a/backend/uploads/generated/643561ea936ac0a4e8e50a79.txt and /dev/null differ
+deleted file mode 100644
+index 6c5e8c9..0000000
+Binary files a/backend/uploads/generated/643e644f0939939a38b5faf7.txt and /dev/null differ
+deleted file mode 100644
+index 6c5e8c9..0000000
+Binary files a/backend/uploads/generated/643e66110939939a38b64165.txt and /dev/null differ
+diff --git a/backend/uploads/generated/64468aba4603595ba4408d64.txt b/backend/uploads/generated/64468aba4603595ba4408d64.txt
+index 0000000..f0d3f80
+Binary files /dev/null and b/backend/uploads/generated/64468aba4603595ba4408d64.txt differ
--- a/backend/controllers/testerController.js
--- /dev/null
--- /dev/null
--- a/backend/uploads/difference/difference.txt
-diff --git a/frontend/src/components/Modals.jsx b/frontend/src/components/Modals.jsx
-index 5e6836f..cd03b16 100644
---- a/frontend/src/components/Modals.jsx
-+++ b/frontend/src/components/Modals.jsx
- import AdminServices from "../services/AdminServices/AdminServices";
- import TesterService from "../services/TesterServices/TesterService";
- import { CircularChart } from "./ChartsComponent";
- import AuthVerifyService from "../services/AuthServices/AuthVerifyService";
-+import { FileAddOutlined, DeleteTwoTone } from "@ant-design/icons";
- 
- export const EmailModal = ({ visible, onCancel }) => {
-   const [form] = Form.useForm();
- export const AddTestModal = ({ visible, onCancel }) => {
-     setMethod(value);
-   };
-   const [files, setFiles] = useState([]);
-+  const hasFiles = files.length > 0;
-   const onFinish = async (values) => {
-     setLoading(true);
- export const AddTestModal = ({ visible, onCancel }) => {
-                 </Col>
-               </Row>
-             </Form.Item>
-             <Form.Item
-               label="Upload bytecode"
-               name="files"
- export const AddTestModal = ({ visible, onCancel }) => {
-                 { required: true, message: "Veuillez ajouter un fichier !" },
-               ]}
-             >
--              <div style={{ display: "flex", alignItems: "center" }}>
-+              <div style={{ display: "flex", flexDirection: "column" }}>
-                 <label
-                   htmlFor="file-upload"
--                  style={{ marginRight: "10px", fontSize: "16px" }}
-+                  style={{ fontSize: "16px", marginBottom: "10px" }}
-                 >
-                   SÃ©lectionnez un ou plusieurs fichiers :
-                 </label>
- export const AddTestModal = ({ visible, onCancel }) => {
-                       cursor: "pointer",
-                     }}
-                   >
--                    Parcourir
-+                    {hasFiles ? <FileAddOutlined /> : <span>Parcourir</span>}
-                   </label>
--                  <div style={{ marginLeft: "10px" }}>
--                    {files.map((file) => (
--                      <span
-+                  <div
-+                    style={{
-+                      marginLeft: "10px",
-+                      display: "flex",
-+                      flexDirection: "column",
-+                    }}
-+                  >
-+                    {files.map((file, index) => (
-+                      <div
-                         key={file.name}
--                        style={{ fontSize: "14px", fontWeight: "bold" }}
-+                        style={{
-+                          display: "flex",
-+                          alignItems: "center",
-+                          marginBottom: "5px",
-+                          padding: "5px",
-+                          border: "1px solid #ccc",
-+                          borderRadius: "5px",
-+                        }}
-                       >
--                        {file.name}{" "}
--                      </span>
-+                        <span
-+                          style={{
-+                            fontSize: "14px",
-+                            fontWeight: "bold",
-+                            marginRight: "5px",
-+                            flexGrow: 1,
-+                            overflow: "hidden",
-+                            whiteSpace: "nowrap",
-+                            textOverflow: "ellipsis",
-+                          }}
-+                        >
-+                          {file.name}
-+                        </span>
-+                        <div
-+                          style={{
-+                            borderLeft: "1px solid #ccc",
-+                            paddingLeft: "5px",
-+                          }}
-+                        >
-+                          <Button
-+                            type="button"
-+                            onClick={() => {
-+                              const newFiles = [...files];
-+                              newFiles.splice(index, 1);
-+                              setFiles(newFiles);
-+                            }}
-+                          >
-+                            <DeleteTwoTone
-+                              twoToneColor="#ff4d4f"
-+                              style={{ fontSize: "20px" }}
-+                            />
-+                          </Button>
-+                        </div>
-+                      </div>
-                     ))}
-                   </div>
-                 </div>
-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.css b/frontend/src/components/ProfileComponent/ProfileComponent.css
-index c6531c8..c5b9a8a 100644
---- a/frontend/src/components/ProfileComponent/ProfileComponent.css
-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.css
-
- 
- .profile-info {
-   margin-top: 20px;
-+  font-size: 28px;
-+  font-weight: bold;
- }
- 
- .profile-name {
--  font-size: 28px;
-+  font-size: 18px;
-   font-weight: bold;
- }
- 
-diff --git a/frontend/src/components/ProfileComponent/ProfileComponent.jsx b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
-index 8dc1ac7..bd8e56a 100644
---- a/frontend/src/components/ProfileComponent/ProfileComponent.jsx
-+++ b/frontend/src/components/ProfileComponent/ProfileComponent.jsx
-
- import React, { useEffect, useState } from "react";
--import { Avatar, Row, Col, Space, Button, Upload } from "antd";
-+import { Avatar, Upload, Card, Tooltip, Tag } from "antd";
- import "./ProfileComponent.css";
- import ProfileServices from "../../services/ProfileServices";
- import { PasswordModal, EmailModal, InfoModal } from "../Modals";
--import { UploadOutlined } from "@ant-design/icons";
-+import {
-+  UploadOutlined,
-+  MailTwoTone,
-+  LockTwoTone,
-+  SettingTwoTone,
-+} from "@ant-design/icons";
- import { toast } from "react-toastify";
- import base64js from "base64-js";
-+const { Meta } = Card;
- 
- function ProfileComponent() {
-   const [modalMailVisible, setModalMailVisible] = useState(false);
- function ProfileComponent() {
-     setImageUrl(null);
-   };
- 
--  return (
--    <div className="profile-page">
--      <div className="site-page-header-ghost-wrapper">
--        <Row justify="center">
--          <Col span={18}>
--            <div className="site-page-header-ghost-wrapper-content">
--              <div className="profile-container">
--                <Row gutter={16} justify="center">
--                  <Col span={6}>
--                    <div
--                      style={{
--                        position: "relative",
--                        display: "inline-block",
--                        borderRadius: "10px",
--                        overflow: "hidden",
--                        marginTop: "30px",
--                      }}
--                      onMouseEnter={handleMouseEnter}
--                      onMouseLeave={handleMouseLeave}
--                    >
--                      {imageUrl === null ? (
--                        <Avatar
--                          className="profile-picture"
--                          size={128}
--                          src={
--                            "https://xsgames.co/randomusers/avatar.php?g=pixel"
--                          }
--                        />
--                      ) : (
--                        <Avatar
--                          className="profile-picture"
--                          size={128}
--                          src={imageUrl}
--                        />
--                      )}
--                      {showButton && (
--                        <div
--                          style={{
--                            position: "absolute",
--                            top: 0,
--                            left: 0,
--                            width: "100%",
--                            height: "100%",
--                            backgroundColor: "rgba(0, 0, 0, 0.5)",
--                            display: "flex",
--                            alignItems: "center",
--                            justifyContent: "center",
--                          }}
--                        >
--                          <Upload
--                            name="image"
--                            method="put"
--                            action="http://localhost:5000/api/v1/update-image"
--                            headers={{
--                              Authorization: `Bearer ${ProfileServices.token}`,
--                            }}
--                            listType="picture-card"
--                            className="avatar-uploader"
--                            showUploadList={false}
--                            beforeUpload={(file) => {
--                              const isJpgOrPng =
--                                file.type === "image/jpeg" ||
--                                file.type === "image/png";
--                              if (!isJpgOrPng) {
--                                toast.error(
--                                  "You can only upload JPG/PNG file!"
--                                );
--                              }
--                              const isLt2M = file.size / 1024 / 1024 < 2;
--                              if (!isLt2M) {
--                                toast.error("Image must smaller than 2MB!");
--                              }
--                              return isJpgOrPng && isLt2M;
--                            }}
--                            onChange={(info) => {
--                              if (info.file.status === "done") {
--                                const byteArray = new Uint8Array(
--                                  info.file.response.image.data
--                                );
--                                const base64String =
--                                  base64js.fromByteArray(byteArray);
--                                handleUpload(atob(base64String));
--                              }
--                            }}
--                            onRemove={handleRemove}
--                          >
--                            <UploadOutlined
--                              style={{ fontSize: "3rem", color: "white" }}
--                            />
--                          </Upload>
--                        </div>
--                      )}
--                    </div>
--                  </Col>
--                  <Col span={12}>
--                    <div className="profile-info">
--                      <h2
--                        className="profile-name"
--                        style={{ textTransform: "capitalize" }}
--                      >
--                        {userInfo.lastname} {userInfo.firstname}
--                      </h2>
--                      <p className="profile-email">Email: {userInfo.email}</p>
--                      <p className="profile-location">Role : {userInfo.role}</p>
--                    </div>
--                  </Col>
--                </Row>
--
--                <div className="profile-bio">
--                  <Space>
--                    <Button
--                      type="primary"
--                      onClick={() => setModalMailVisible(true)}
--                      style={{ backgroundColor: "#2596be", color: "white" }}
--                    >
--                      MAJ email
--                    </Button>
--                    <Button
--                      type="primary"
--                      onClick={() => setModalPasswordVisible(true)}
--                      style={{ backgroundColor: "#2596be", color: "white" }}
--                    >
--                      MAJ mot de passe
--                    </Button>
--                    <Button
--                      type="primary"
--                      onClick={() => setModalInfoVisible(true)}
--                      style={{ backgroundColor: "#2596be", color: "white" }}
--                    >
--                      MAJ profil
--                    </Button>
-+  const obj = {
-+    des: (
-+      <div>
-+        <h2
-+          className="profile-name"
-+          style={{ textTransform: "capitalize", color: "black" }}
-+        >
-+          {userInfo.lastname} {userInfo.firstname}
-+        </h2>
-+        <p className="profile-email">Email: {userInfo.email}</p>
-+        <p className="profile-location">
-+          Role :{" "}
-+          <Tag color="gold" style={{ fontSize: "20px" }}>
-+            {userInfo.role}
-+          </Tag>
-+        </p>
-+      </div>
-+    ),
-+    tit: <div className="profile-bio">Information sur le profil</div>,
-+  };
- 
--                    <EmailModal
--                      info={userInfo}
--                      onCancel={handleCancelMail}
--                      visible={modalMailVisible}
--                    />
--                    <PasswordModal
--                      onCancel={handleCancelPassword}
--                      visible={modalPasswordVisible}
--                    />
--                    <InfoModal
--                      info={userInfo}
--                      onCancel={handleCancelInfo}
--                      visible={modalInfoVisible}
--                    />
--                  </Space>
--                </div>
--              </div>
-+  return (
-+    <Card
-+      bordered
-+      style={{
-+        width: 300,
-+        border: "1px solid black",
-+        backgroundColor: "#f0f2f5",
-+      }}
-+      cover={
-+        <div
-+          style={{
-+            position: "relative",
-+            display: "inline-block",
-+            borderRadius: "10px",
-+            overflow: "hidden",
-+            marginTop: "30px",
-+          }}
-+          onMouseEnter={handleMouseEnter}
-+          onMouseLeave={handleMouseLeave}
-+        >
-+          {imageUrl === null ? (
-+            <Avatar
-+              className="profile-picture"
-+              size={128}
-+              src={"https://xsgames.co/randomusers/avatar.php?g=pixel"}
-+            />
-+          ) : (
-+            <Avatar className="profile-picture" size={128} src={imageUrl} />
-+          )}
-+          {showButton && (
-+            <div
-+              style={{
-+                position: "absolute",
-+                top: 0,
-+                left: 0,
-+                width: "100%",
-+                height: "100%",
-+                backgroundColor: "rgba(0, 0, 0, 0.5)",
-+                display: "flex",
-+                alignItems: "center",
-+                justifyContent: "center",
-+              }}
-+            >
-+              <Upload
-+                name="image"
-+                method="put"
-+                action="http://localhost:5000/api/v1/update-image"
-+                headers={{
-+                  Authorization: `Bearer ${ProfileServices.token}`,
-+                }}
-+                listType="picture-card"
-+                className="avatar-uploader"
-+                showUploadList={false}
-+                beforeUpload={(file) => {
-+                  const isJpgOrPng =
-+                    file.type === "image/jpeg" || file.type === "image/png";
-+                  if (!isJpgOrPng) {
-+                    toast.error("You can only upload JPG/PNG file!");
-+                  }
-+                  const isLt2M = file.size / 1024 / 1024 < 2;
-+                  if (!isLt2M) {
-+                    toast.error("Image must smaller than 2MB!");
-+                  }
-+                  return isJpgOrPng && isLt2M;
-+                }}
-+                onChange={(info) => {
-+                  if (info.file.status === "done") {
-+                    const byteArray = new Uint8Array(
-+                      info.file.response.image.data
-+                    );
-+                    const base64String = base64js.fromByteArray(byteArray);
-+                    handleUpload(atob(base64String));
-+                  }
-+                }}
-+                onRemove={handleRemove}
-+              >
-+                <UploadOutlined style={{ fontSize: "3rem", color: "white" }} />
-+              </Upload>
-             </div>
--          </Col>
--        </Row>
--      </div>
--    </div>
-+          )}
-+        </div>
-+      }
-+      actions={[
-+        <Tooltip color="cyan" title="Mettre Ã  jour l'adresse mail" key={"cyan"}>
-+          <MailTwoTone
-+            onClick={() => setModalMailVisible(true)}
-+            key="MailSetting"
-+            style={{ fontSize: "30px" }}
-+            twoToneColor="#4682b4"
-+          />
-+        </Tooltip>,
-+        <Tooltip
-+          color="lime"
-+          title="Mettre Ã  jour le mot de passe"
-+          key={"lime"}
-+        >
-+          <LockTwoTone
-+            onClick={() => setModalPasswordVisible(true)}
-+            key="passwordSetting"
-+            style={{ fontSize: "30px" }}
-+            twoToneColor="#4682b4"
-+          />
-+        </Tooltip>,
-+        <Tooltip color="purple" title="Mettre Ã  jour vos info" key={"purple"}>
-+          <SettingTwoTone
-+            onClick={() => setModalInfoVisible(true)}
-+            key="passwordSetting"
-+            style={{ fontSize: "30px" }}
-+            twoToneColor="#4682b4"
-+          />
-+        </Tooltip>,
-+      ]}
-+      className="profile-page"
-+    >
-+      <EmailModal
-+        info={userInfo}
-+        onCancel={handleCancelMail}
-+        visible={modalMailVisible}
-+      />
-+      <PasswordModal
-+        onCancel={handleCancelPassword}
-+        visible={modalPasswordVisible}
-+      />
-+      <InfoModal
-+        info={userInfo}
-+        onCancel={handleCancelInfo}
-+        visible={modalInfoVisible}
-+      />
-+      <Meta title={obj.tit} description={obj.des} />
-+    </Card>
-   );
- }
- 
-diff --git a/frontend/src/components/TableComponent.jsx b/frontend/src/components/TableComponent.jsx
-index 379ffcf..a0fd3a2 100644
---- a/frontend/src/components/TableComponent.jsx
-+++ b/frontend/src/components/TableComponent.jsx
- const TableComponent = ({ data, isAdminPage, role }) => {
-       columns={columns}
-       dataSource={data}
-       pagination={{
--        pageSize: 7,
-+        pageSize: 6,
-       }}
-       rowKey="_id"
-     />
-diff --git a/frontend/src/pages/AllUsersPage/AllUsers.jsx b/frontend/src/pages/AllUsersPage/AllUsers.jsx
-index 2af2f6a..6d12ffe 100644
---- a/frontend/src/pages/AllUsersPage/AllUsers.jsx
-+++ b/frontend/src/pages/AllUsersPage/AllUsers.jsx
-
--import { Button, Tooltip } from "antd";
-+import { Button } from "antd";
- import React, { useEffect, useState } from "react";
- import TalanLogo from "../../assets/talan-logo.png";
- import { AddUserModal } from "../../components/Modals";
- const Page = () => {
-     AdminServices.getAllUsers().then((res) => setData(res));
-   }, [data]);
-   return (
--    <>
--      <Tooltip title="Add new user">
--        <Button
--          size="large"
--          type="primary"
--          onClick={() => setModalAddUserForm(true)}
--          style={{
--            float: "right",
--            marginBottom: "30px",
--            backgroundColor: "#2596be",
--            color: "white",
--          }}
--          shape="round"
--          icon={<UserAddOutlined spin={true} />}
--        >
--          Add user
--        </Button>
--      </Tooltip>
-+    <div>
-+      <Button
-+        size="large"
-+        type="primary"
-+        onClick={() => setModalAddUserForm(true)}
-+        style={{
-+          float: "right",
-+          marginBottom: "15px",
-+          backgroundColor: "#2596be",
-+          color: "white",
-+        }}
-+        shape="round"
-+        icon={<UserAddOutlined spin={true} />}
-+      >
-+        Add user
-+      </Button>
- 
-       <AddUserModal onCancel={handleCancelAddUser} visible={modalAddUserForm} />
-       <TableComponent data={data} isAdminPage={true} />
--    </>
-+    </div>
-   );
- };